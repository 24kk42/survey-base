[{"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\index.js":"1","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\App.js":"2","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\serviceWorker.js":"3","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\router.js":"4","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\FormTemplatePage.js":"5","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\Dashboard.js":"6","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\UnsuitPage.js":"7","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\SessionHelper.js":"8","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\UserPage.js":"9","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\YasamUserPage.js":"10","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\FormPage.js":"11","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\SignIn\\SignIn.js":"12","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\CompanyPage.js":"13","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\ForgotPassword\\ForgotPassword.js":"14","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\SignUp\\SignUp.js":"15","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\AccountActivated\\AccountActivated.js":"16","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\EPDKWorkAccidentPage.js":"17","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\DepartmentPage.js":"18","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\ResetPassword\\ResetPassword.js":"19","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\UnsuitDetailsPage.js":"20","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\MainWorkAccidentPage.js":"21","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\reports\\ContractorFieldInspection.js":"22","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\reports\\GoalCharts.js":"23","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\CitiesTownsPage.js":"24","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GoalsPage.js":"25","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\TaskPage.js":"26","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\AllTasksPage.js":"27","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\PersonalTaskPage.js":"28","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\navbar.js":"29","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\TaskDetailsPage.js":"30","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\landingPage\\index.js":"31","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\LanguageHelper.js":"32","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\AuthorizationHelper.js":"33","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\YasamUserTable.js":"34","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GoalForm.js":"35","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\Request.js":"36","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\BarChart.js":"37","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\ChartData.js":"38","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Footer\\Copyright.js":"39","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FormTemplateTable.js":"40","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\PieChart.js":"41","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\TableBackdrop.js":"42","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Reports\\ChartsPDF.js":"43","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\AltTable.js":"44","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Buttons\\IconTooltipButton.js":"45","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Selectors\\DatePickers.js":"46","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\UnsuitTable.js":"47","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\UserTable.js":"48","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\components\\FormTable.js":"49","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Snackbar\\Snackbar.js":"50","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\CitiesTownsTable.js":"51","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\styles\\tableContainer.js":"52","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\TaskDetails.js":"53","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\components\\NavDrawer.js":"54","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\components\\TopBar.js":"55","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\PersonalTaskTable.js":"56","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\AllTasksTable.js":"57","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\TaskTable.js":"58","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\NewUserModal.js":"59","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\Table.js":"60","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\components\\FetchData.js":"61","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\jsonMap.js":"62","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\NewCityModal.js":"63","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\Details.js":"64","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\FetchData.js":"65","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Lists\\ListOfFiles.js":"66","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\FetchData.js":"67","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\StatusColumn.js":"68","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\FetchData.js":"69","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FetchData.js":"70","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Details.js":"71","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\landingPage\\LandingPage.js":"72","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\UserModal.js":"73","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\FetchData.js":"74","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Buttons\\Settings.js":"75","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Forms\\FilledForm.js":"76","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\UnsuitDetails.js":"77","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\MainWorkAccidentTable.js":"78","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\DepartmentTable.js":"79","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\EPDKWorkAccidentTable.js":"80","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\index.js":"81","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\UnsuitabilityButton.js":"82","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\GetOptions.js":"83","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\FetchData.js":"84","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\NewTaskModal.js":"85","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\FetchData.js":"86","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\NewTaskModal.js":"87","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\ModalForm.js":"88","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\ModalForm.js":"89","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Modal\\TableEntryModal.js":"90","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\PageStepper.js":"91","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Content.js":"92","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\ModalForm.js":"93","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Header.js":"94","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\DeleteDialog.js":"95","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FormModal.js":"96","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\GetOptions.js":"97","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\FetchData.js":"98","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\Details.js":"99","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\GetOptions.js":"100","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\NewDepartmentModal.js":"101","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\FetchData.js":"102","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\AccidentPersonnelDetails.js":"103","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\NewAccidentModal.js":"104","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\FetchData.js":"105","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\GetOptions.js":"106","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\Forms.js":"107","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\RejectionModal.js":"108","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\UnsuitData.js":"109","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\languages.js":"110","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\ModalForm.js":"111","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\ModalForm.js":"112","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\RoleList.js":"113","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\TextInput.js":"114","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\SelectionGroup.js":"115","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Selectors\\PageSelector.js":"116","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\ModalForm.js":"117","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Details.js":"118","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Group.js":"119","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\WorkAccidentForm.js":"120","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Dialog\\SlideDialog.js":"121","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\PrintOptions.js":"122","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\FieldsList.js":"123","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\FormFilesSection.js":"124","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\AccidentPersonnelForm.js":"125","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Dropzone.js":"126","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\InjuredPartsList.js":"127","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\OtherFiles.js":"128","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\BelongingDepartmentList.js":"129","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\FetchData.js":"130","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\ModalForm.js":"131","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\PrintDetails.js":"132","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\PrintUnsuitability.js":"133","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\TaskData.js":"134","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\Forms.js":"135","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\CompanyTable.js":"136","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\Details.js":"137","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\NewCompanyModal.js":"138","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\FetchData.js":"139","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\ModalForm.js":"140","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\SGKList.js":"141","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\TableFilters.js":"142","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\GetOptions.js":"143","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\GetOptions.js":"144","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\GetOptions.js":"145","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\GetOptions.js":"146","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GetOptions.js":"147","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\constants.js":"148","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\UnsuitFilters.js":"149","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\AllTasksFilters.js":"150","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\TasksFilters.js":"151","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\PersonalTasksFilters.js":"152","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\showSnackbar.js":"153","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\GetOptions.js":"154","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Fields\\TextFields.js":"155","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\Export.js":"156"},{"size":662,"mtime":1602009884000,"results":"157","hashOfConfig":"158"},{"size":202,"mtime":1601904754000,"results":"159","hashOfConfig":"158"},{"size":5086,"mtime":1594992674000,"results":"160","hashOfConfig":"158"},{"size":5242,"mtime":1610952196000,"results":"161","hashOfConfig":"158"},{"size":472,"mtime":1605609968000,"results":"162","hashOfConfig":"158"},{"size":12446,"mtime":1612867949813,"results":"163","hashOfConfig":"158"},{"size":749,"mtime":1606939310000,"results":"164","hashOfConfig":"158"},{"size":1526,"mtime":1601904754000,"results":"165","hashOfConfig":"158"},{"size":445,"mtime":1605609968000,"results":"166","hashOfConfig":"158"},{"size":457,"mtime":1608549706000,"results":"167","hashOfConfig":"158"},{"size":440,"mtime":1605609968000,"results":"168","hashOfConfig":"158"},{"size":6676,"mtime":1612892930518,"results":"169","hashOfConfig":"158"},{"size":454,"mtime":1605609968000,"results":"170","hashOfConfig":"158"},{"size":5005,"mtime":1612895781001,"results":"171","hashOfConfig":"158"},{"size":6860,"mtime":1612895781001,"results":"172","hashOfConfig":"158"},{"size":3186,"mtime":1608665320000,"results":"173","hashOfConfig":"158"},{"size":755,"mtime":1607426134000,"results":"174","hashOfConfig":"158"},{"size":466,"mtime":1605609968000,"results":"175","hashOfConfig":"158"},{"size":5516,"mtime":1612895781001,"results":"176","hashOfConfig":"158"},{"size":601,"mtime":1605609968000,"results":"177","hashOfConfig":"158"},{"size":755,"mtime":1607426186000,"results":"178","hashOfConfig":"158"},{"size":6889,"mtime":1612809519596,"results":"179","hashOfConfig":"158"},{"size":13181,"mtime":1612960051799,"results":"180","hashOfConfig":"158"},{"size":470,"mtime":1605609968000,"results":"181","hashOfConfig":"158"},{"size":11943,"mtime":1614163779898,"results":"182","hashOfConfig":"158"},{"size":443,"mtime":1606397920000,"results":"183","hashOfConfig":"158"},{"size":462,"mtime":1614165164776,"results":"184","hashOfConfig":"158"},{"size":477,"mtime":1606397830000,"results":"185","hashOfConfig":"158"},{"size":6549,"mtime":1611679304000,"results":"186","hashOfConfig":"158"},{"size":1164,"mtime":1611403050000,"results":"187","hashOfConfig":"158"},{"size":67,"mtime":1599831490000,"results":"188","hashOfConfig":"158"},{"size":1348,"mtime":1601904754000,"results":"189","hashOfConfig":"158"},{"size":30101,"mtime":1614163717178,"results":"190","hashOfConfig":"158"},{"size":4736,"mtime":1614163717178,"results":"191","hashOfConfig":"158"},{"size":6648,"mtime":1614019484128,"results":"192","hashOfConfig":"158"},{"size":1276,"mtime":1613670197298,"results":"193","hashOfConfig":"158"},{"size":5200,"mtime":1612443090000,"results":"194","hashOfConfig":"158"},{"size":3906,"mtime":1612809519595,"results":"195","hashOfConfig":"158"},{"size":502,"mtime":1602072214000,"results":"196","hashOfConfig":"158"},{"size":5580,"mtime":1613137059166,"results":"197","hashOfConfig":"158"},{"size":5853,"mtime":1612342752000,"results":"198","hashOfConfig":"158"},{"size":510,"mtime":1608998166000,"results":"199","hashOfConfig":"158"},{"size":2431,"mtime":1610559780000,"results":"200","hashOfConfig":"158"},{"size":1209,"mtime":1609344558000,"results":"201","hashOfConfig":"158"},{"size":1313,"mtime":1614093119179,"results":"202","hashOfConfig":"158"},{"size":1930,"mtime":1612345750000,"results":"203","hashOfConfig":"158"},{"size":6095,"mtime":1614361930014,"results":"204","hashOfConfig":"158"},{"size":5480,"mtime":1613399746247,"results":"205","hashOfConfig":"158"},{"size":8979,"mtime":1612809747532,"results":"206","hashOfConfig":"158"},{"size":813,"mtime":1606807686000,"results":"207","hashOfConfig":"158"},{"size":2753,"mtime":1613137059166,"results":"208","hashOfConfig":"158"},{"size":960,"mtime":1607699574000,"results":"209","hashOfConfig":"158"},{"size":6512,"mtime":1613668662595,"results":"210","hashOfConfig":"158"},{"size":4545,"mtime":1611682522000,"results":"211","hashOfConfig":"158"},{"size":2889,"mtime":1607093416000,"results":"212","hashOfConfig":"158"},{"size":8441,"mtime":1614361930014,"results":"213","hashOfConfig":"158"},{"size":6076,"mtime":1614361930014,"results":"214","hashOfConfig":"158"},{"size":4756,"mtime":1614361930015,"results":"215","hashOfConfig":"158"},{"size":4529,"mtime":1613489449818,"results":"216","hashOfConfig":"158"},{"size":7085,"mtime":1614448868964,"results":"217","hashOfConfig":"158"},{"size":2522,"mtime":1612809747532,"results":"218","hashOfConfig":"158"},{"size":848,"mtime":1613142320162,"results":"219","hashOfConfig":"158"},{"size":1857,"mtime":1613137059166,"results":"220","hashOfConfig":"158"},{"size":6846,"mtime":1613590981756,"results":"221","hashOfConfig":"158"},{"size":1521,"mtime":1612809747532,"results":"222","hashOfConfig":"158"},{"size":1046,"mtime":1605627222000,"results":"223","hashOfConfig":"158"},{"size":4958,"mtime":1612809747533,"results":"224","hashOfConfig":"158"},{"size":2747,"mtime":1613736818422,"results":"225","hashOfConfig":"158"},{"size":4060,"mtime":1614361628000,"results":"226","hashOfConfig":"158"},{"size":1936,"mtime":1612809747532,"results":"227","hashOfConfig":"158"},{"size":15230,"mtime":1612809747532,"results":"228","hashOfConfig":"158"},{"size":438,"mtime":1601904664000,"results":"229","hashOfConfig":"158"},{"size":3853,"mtime":1613137059167,"results":"230","hashOfConfig":"158"},{"size":2199,"mtime":1612809747533,"results":"231","hashOfConfig":"158"},{"size":1861,"mtime":1611682710000,"results":"232","hashOfConfig":"158"},{"size":3790,"mtime":1612809519595,"results":"233","hashOfConfig":"158"},{"size":9657,"mtime":1613662108100,"results":"234","hashOfConfig":"158"},{"size":4312,"mtime":1613582217606,"results":"235","hashOfConfig":"158"},{"size":4941,"mtime":1613726639843,"results":"236","hashOfConfig":"158"},{"size":2778,"mtime":1612866896652,"results":"237","hashOfConfig":"158"},{"size":61,"mtime":1598347732000,"results":"238","hashOfConfig":"158"},{"size":1319,"mtime":1614092855525,"results":"239","hashOfConfig":"158"},{"size":972,"mtime":1614011576893,"results":"240","hashOfConfig":"158"},{"size":4649,"mtime":1614361628000,"results":"241","hashOfConfig":"158"},{"size":3052,"mtime":1614340676229,"results":"242","hashOfConfig":"158"},{"size":4570,"mtime":1614361628000,"results":"243","hashOfConfig":"158"},{"size":3078,"mtime":1614361197759,"results":"244","hashOfConfig":"158"},{"size":11542,"mtime":1613592651662,"results":"245","hashOfConfig":"158"},{"size":1151,"mtime":1613591153397,"results":"246","hashOfConfig":"158"},{"size":1326,"mtime":1608795692000,"results":"247","hashOfConfig":"158"},{"size":1720,"mtime":1601904698000,"results":"248","hashOfConfig":"158"},{"size":2568,"mtime":1601911336000,"results":"249","hashOfConfig":"158"},{"size":1860,"mtime":1613140240234,"results":"250","hashOfConfig":"158"},{"size":2261,"mtime":1601911418000,"results":"251","hashOfConfig":"158"},{"size":1432,"mtime":1601904698000,"results":"252","hashOfConfig":"158"},{"size":975,"mtime":1605612692000,"results":"253","hashOfConfig":"158"},{"size":1593,"mtime":1614011576892,"results":"254","hashOfConfig":"158"},{"size":4013,"mtime":1612809747533,"results":"255","hashOfConfig":"158"},{"size":2842,"mtime":1612809747532,"results":"256","hashOfConfig":"158"},{"size":3022,"mtime":1614011576893,"results":"257","hashOfConfig":"158"},{"size":4175,"mtime":1613398479143,"results":"258","hashOfConfig":"158"},{"size":3433,"mtime":1612809747532,"results":"259","hashOfConfig":"158"},{"size":8111,"mtime":1613582217606,"results":"260","hashOfConfig":"158"},{"size":5018,"mtime":1613582217606,"results":"261","hashOfConfig":"158"},{"size":3268,"mtime":1612809747532,"results":"262","hashOfConfig":"158"},{"size":7275,"mtime":1614011576892,"results":"263","hashOfConfig":"158"},{"size":2321,"mtime":1611407400000,"results":"264","hashOfConfig":"158"},{"size":2388,"mtime":1613483825883,"results":"265","hashOfConfig":"158"},{"size":3237,"mtime":1612959774976,"results":"266","hashOfConfig":"158"},{"size":130,"mtime":1598347732000,"results":"267","hashOfConfig":"158"},{"size":6417,"mtime":1614364657305,"results":"268","hashOfConfig":"158"},{"size":5572,"mtime":1614364709879,"results":"269","hashOfConfig":"158"},{"size":2162,"mtime":1613726327743,"results":"270","hashOfConfig":"158"},{"size":364,"mtime":1600182542000,"results":"271","hashOfConfig":"158"},{"size":1585,"mtime":1601911398000,"results":"272","hashOfConfig":"158"},{"size":1149,"mtime":1601911382000,"results":"273","hashOfConfig":"158"},{"size":5279,"mtime":1614361733572,"results":"274","hashOfConfig":"158"},{"size":872,"mtime":1607692412000,"results":"275","hashOfConfig":"158"},{"size":5672,"mtime":1613582217606,"results":"276","hashOfConfig":"158"},{"size":3676,"mtime":1613581384673,"results":"277","hashOfConfig":"158"},{"size":1530,"mtime":1611406820000,"results":"278","hashOfConfig":"158"},{"size":1135,"mtime":1601904698000,"results":"279","hashOfConfig":"158"},{"size":2419,"mtime":1613726761353,"results":"280","hashOfConfig":"158"},{"size":6912,"mtime":1612809747532,"results":"281","hashOfConfig":"158"},{"size":9723,"mtime":1613656326352,"results":"282","hashOfConfig":"158"},{"size":7275,"mtime":1608668440000,"results":"283","hashOfConfig":"158"},{"size":2816,"mtime":1613591822237,"results":"284","hashOfConfig":"158"},{"size":3580,"mtime":1612809747532,"results":"285","hashOfConfig":"158"},{"size":4837,"mtime":1613586528999,"results":"286","hashOfConfig":"158"},{"size":4499,"mtime":1614361628000,"results":"287","hashOfConfig":"158"},{"size":3124,"mtime":1614021513959,"results":"288","hashOfConfig":"158"},{"size":4220,"mtime":1608572120000,"results":"289","hashOfConfig":"158"},{"size":2526,"mtime":1614092114876,"results":"290","hashOfConfig":"158"},{"size":3014,"mtime":1612959774976,"results":"291","hashOfConfig":"158"},{"size":2313,"mtime":1611407116000,"results":"292","hashOfConfig":"158"},{"size":3970,"mtime":1613397912311,"results":"293","hashOfConfig":"158"},{"size":2432,"mtime":1611936344000,"results":"294","hashOfConfig":"158"},{"size":3091,"mtime":1613137059166,"results":"295","hashOfConfig":"158"},{"size":2150,"mtime":1612809747533,"results":"296","hashOfConfig":"158"},{"size":2367,"mtime":1613589774799,"results":"297","hashOfConfig":"158"},{"size":2836,"mtime":1613726928312,"results":"298","hashOfConfig":"158"},{"size":1603,"mtime":1613064197193,"results":"299","hashOfConfig":"158"},{"size":1463,"mtime":1614011576893,"results":"300","hashOfConfig":"158"},{"size":2539,"mtime":1614340158402,"results":"301","hashOfConfig":"158"},{"size":1251,"mtime":1614011576892,"results":"302","hashOfConfig":"158"},{"size":3563,"mtime":1614011576892,"results":"303","hashOfConfig":"158"},{"size":792,"mtime":1614011576892,"results":"304","hashOfConfig":"158"},{"size":1300,"mtime":1612959178103,"results":"305","hashOfConfig":"158"},{"size":4394,"mtime":1614010989497,"results":"306","hashOfConfig":"158"},{"size":3894,"mtime":1614010989497,"results":"307","hashOfConfig":"158"},{"size":2413,"mtime":1614010989497,"results":"308","hashOfConfig":"158"},{"size":1960,"mtime":1614010989497,"results":"309","hashOfConfig":"158"},{"size":722,"mtime":1613137059165,"results":"310","hashOfConfig":"158"},{"size":934,"mtime":1614011576893,"results":"311","hashOfConfig":"158"},{"size":1368,"mtime":1613586910246,"results":"312","hashOfConfig":"158"},{"size":2591,"mtime":1614449440813,"results":"313","hashOfConfig":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},"b6shcp",{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"316"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"316"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"316"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"316"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"316"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"316"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"316"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"316"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"316"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"316"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"316"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"316"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"316"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"316"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"316"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"316"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"316"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"316"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\index.js",[],["645","646"],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\App.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\serviceWorker.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\router.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\FormTemplatePage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\Dashboard.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\UnsuitPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\SessionHelper.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\UserPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\YasamUserPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\FormPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\SignIn\\SignIn.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\CompanyPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\SignUp\\SignUp.js",["647"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport logo from '../../assets/images/pincident.png';\r\nimport LanguageHelper from \"../../helpers/LanguageHelper\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Copyright from '../../components/Footer/Copyright';\r\nimport Request from '../../helpers/Request';\r\nimport CustomSnackbar from '../../components/Snackbar/Snackbar';\r\nimport Settings from '../../components/Buttons/Settings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: 20,\r\n    width: 300,\r\n    height: \"auto\"\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const darkTheme = createMuiTheme({ palette: { type: 'dark' } });\r\n  const lightTheme = createMuiTheme({ palette: { type: 'light' } });\r\n  const language = LanguageHelper.getLanguage();\r\n  \r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\")\r\n  const [newPasswordCheck, setNewPasswordCheck] = useState(\"\")\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [severity, setSeverity] = useState(\"info\");\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [languageState, setLanguage] = React.useState(language);\r\n  const [darkMode, setDarkMode] = React.useState(localStorage.getItem(\"darkMode\"));\r\n\r\n  async function handleActivate(email, password) {\r\n    const resp = await Request(\"post\", \"/api/auth/activate-account/\", { email: email, newPassword: password });\r\n    console.log(resp);\r\n    if (resp.status !== 200) {\r\n      setMessage(language.login.unexpectedError);\r\n      setSnackbar(true);\r\n    } else {\r\n      setMessage(language.login.emailSent);\r\n      setShowMessage(true);\r\n      setTimeout(() => {\r\n        history.push(\"/signin\");\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const checkCredentials = () => {\r\n    if (email === \"\") {\r\n      setMessage(language.login.provideEmail);\r\n      setSnackbar(true);\r\n    }\r\n    else if (newPassword === \"\") {\r\n      setMessage(language.login.providePassword);\r\n      setSnackbar(true);\r\n    }\r\n    else {\r\n      // eslint-disable-next-line no-useless-escape\r\n      let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (re.test(email)) {\r\n        if (newPasswordCheck === newPassword) {\r\n          handleActivate(email, newPassword);\r\n        }\r\n        else {\r\n          setMessage(language.login.passwordMatch);\r\n          setSnackbar(true);\r\n        }\r\n      }\r\n      else {\r\n        setMessage(language.login.weirdEmail);\r\n        setSnackbar(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <CustomSnackbar\r\n        snackbar={snackbar}\r\n        setSnackbar={setSnackbar}\r\n        snackbarMessage={message}\r\n        severity={severity}\r\n      />\r\n      <Settings darkMode={darkMode} setDarkMode={setDarkMode} setLanguage={setLanguage} />\r\n      <Container component=\"main\" maxWidth=\"xs\"  >\r\n        <ThemeProvider theme={darkMode === \"true\" ? darkTheme : lightTheme}>\r\n          <CssBaseline />\r\n          <div className={classes.paper} >\r\n            <img className={classes.avatar} alt={logo} src={logo} />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {language.login.activate}\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                snackbar={snackbar}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label={language.login.email}\r\n                autoFocus\r\n                onChange={email => setEmail(email.target.value)}\r\n              />\r\n              <TextField\r\n                snackbar={snackbar}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label={language.login.password}\r\n                type=\"password\"\r\n                autoFocus\r\n                onChange={newPassword => setNewPassword(newPassword.target.value)}\r\n              />\r\n              <TextField\r\n                snackbar={snackbar}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label={language.login.passwordConfirm}\r\n                type=\"password\"\r\n                autoFocus\r\n                onChange={newPasswordCheck => setNewPasswordCheck(newPasswordCheck.target.value)}\r\n              />\r\n              {\r\n                newPassword !== newPasswordCheck && newPasswordCheck !== \"\" &&\r\n                <Typography style={{color: \"red\"}}>\r\n                  {language.login.passwordMatch}\r\n                </Typography>\r\n              }\r\n              {showMessage && \r\n                <Typography style={{color: \"blue\"}}>\r\n                  {message}\r\n                </Typography>\r\n              }\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={() => checkCredentials()}\r\n              >\r\n                {language.login.activate}\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\" onClick={() => {\r\n                    history.push(\"/signin\")\r\n                  }}>\r\n                    {language.login.haveAccount}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={8} >\r\n            <Copyright\r\n              string={\"DELTA Smart Technologies\"}\r\n              date={new Date().getFullYear()}\r\n              url={\"https://deltasmart.tech/en/home/\"}\r\n            />\r\n          </Box>\r\n        </ThemeProvider>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\AccountActivated\\AccountActivated.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\EPDKWorkAccidentPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\DepartmentPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\ResetPassword\\ResetPassword.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\UnsuitDetailsPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\MainWorkAccidentPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\reports\\ContractorFieldInspection.js",["648"],"import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport SessionHelper from '../../helpers/SessionHelper';\nimport Copyright from '../../components/Footer/Copyright';\nimport moment from 'moment';\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport IconTooltipButton from '../../components/Buttons/IconTooltipButton';\nimport 'moment/locale/tr';\nimport { Autocomplete } from '@material-ui/lab';\nimport Request from '../../helpers/Request';\nimport { TextField } from '@material-ui/core';\nimport FileSaver from 'file-saver';\nimport { MonthPicker } from '../../components/Selectors/DatePickers';\nimport TableBackdrop from '../../components/Table/TableBackdrop';\nimport CustomSnackbar from '../../components/Snackbar/Snackbar';\nimport LanguageHelper from '../../helpers/LanguageHelper';\n\nconst fixedHeight = 500;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    maxHeight: fixedHeight,\n  },\n  textField: {\n    width: \"90%\",\n    margin: 10\n  },\n}));\n\n/**\n * A dashboard component that renders charts depending on the role of the user.\n */\nexport default function ContractorFieldInspection() {\n  moment.locale(\"tr\");\n  const user = SessionHelper.getUser();\n  const language = LanguageHelper.getLanguage();\n  const token = user.accessToken;\n  const classes = useStyles();\n  let collator = new Intl.Collator(\"tr\");\n\n  const [contractor, setContractor] = React.useState(null);\n  const [contractors, setContractors] = React.useState([]);\n  const [startDate, setStartDate] = React.useState(moment().utc().set(\"date\", 1).set(\"hour\", 0).set(\"minute\", 1).toISOString());\n  const [endDate, setEndDate] = React.useState(moment().utc().set(\"date\", 1).add(1, \"month\").set(\"hour\", 23).set(\"minute\", 59).toISOString());\n  const [backdropLoading, setBackdropLoading] = React.useState(false);\n  const [snackbar, setSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [severity, setSeverity] = React.useState(\"info\");\n\n  const init = useCallback(async () => {\n    setContractors(await getContractors());\n  }, []);\n  React.useEffect(() => {\n    init();\n  }, [init]);\n  \n  const getContractors = async () => {\n    const resp = await Request(\"get\", \"/api/companies/\" + user.companyId + \"/contractors\", { \"Authorization\": \"Bearer \" + token, \"Accept-Language\": \"tr-TR\" });\n    const data = resp.data;\n    let arr = [];\n    for (let i = 0; i < data.length; i++) {\n      let dept = {};\n      dept[\"name\"] = data[i].name;\n      dept[\"id\"] = data[i].id;\n      arr.push(dept);\n    }\n    return arr;\n  }\n\n  const getReport = async () => {\n    setBackdropLoading(true);\n    const param = {\n      \"end-date\": endDate,\n      \"start-date\": startDate\n    }\n    const resp = await Request(\"get\", \"/api/report/export/\" + contractor + \"/saha-denetim\", { \"Authorization\": \"Bearer \" + token, \"Accept-Language\": \"tr-TR\" }, null, param);\n    console.log(resp);\n    if(resp.status !== 200) {\n      if(resp.data && resp.data.message) {\n        setSeverity(\"error\");\n        setSnackbarMessage(resp.data.message);\n        setSnackbar(true);\n      } else {\n        setSeverity(\"error\");\n        setSnackbarMessage(language.login.unexpectedError);\n        setSnackbar(true);\n      }\n    } else {\n      const source = \"data:application/xlsx;base64, \" + encodeURI(resp.data);\n      FileSaver.saveAs(source, getContractorFromId(contractor).name + \"_\" + moment(startDate).format(\"DD-MM-YYYY\") + \"_\" + moment(endDate).format(\"DD-MM-YYYY\") + \"_Saha_Denetim_Raporu.xlsx\");\n    }\n    setBackdropLoading(false);\n    return;\n  }\n\n  const RenderAutocomplete = () => {\n    return(\n      <Autocomplete\n        id=\"combo-box\"\n        options={contractors.sort(function(a, b) {\n          return collator.compare(a.name, b.name)\n        })}\n        getOptionLabel={(option) => option.name}\n        fullWidth={true}\n        defaultValue={contractor ? getContractorFromId(contractor) : null}\n        onChange={(event, value) => setContractor(value?.id)} \n        renderInput={(params) => <TextField {...params} required label=\"Yüklenici\" className={classes.textField}/>}\n      />\n    )\n  }\n\n  const getContractorFromId = (id) => {\n    for(let i = 0; i < contractors.length; i++) {\n      if(contractors[i].id === id) {\n        return contractors[i];\n      }\n    }\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      <CustomSnackbar\n        snackbar={snackbar}\n        setSnackbar={setSnackbar}\n        snackbarMessage={snackbarMessage}\n        severity={severity}\n      />\n      <TableBackdrop backdropLoading={backdropLoading} />\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3} justify=\"space-between\">\n            {/* SETTINGS */}\n            <Grid item xs={contractor ? 10 : 12}>\n              <Paper className={classes.paper} style={{height: 100}}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <MonthPicker \n                      style={classes.textField}\n                      label=\"Tarihi\" \n                      value={moment(startDate)} \n                      shrink={startDate} \n                      onChangeFunc={value => {\n                        setStartDate(moment(value).toISOString());\n                        setEndDate(moment(value).utc().add(1, \"month\").set(\"hour\", 23).set(\"minute\", 59).toISOString());\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={6}><RenderAutocomplete /></Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n\n            {/* EXPORT BUTTON */}\n            {contractor &&\n            <Grid item>\n              <Paper className={classes.paper} style={{height: 100, width: 100}}>\n                <div style={{margin: \"auto\", marginLeft: \"32%\"}}>\n                  <IconTooltipButton title=\"Raporu İndir\" onClick={getReport}>\n                    <SaveAlt/>\n                  </IconTooltipButton>\n                </div>\n              </Paper>\n            </Grid>}\n            \n            <Grid container spacing={3}>\n           \n           \n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright string={\"DELTA Smart Technologies\"} url={\"https://deltasmart.tech/en/home/\"} date={new Date().getFullYear()} />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\reports\\GoalCharts.js",["649"],"import React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport BarChart from '../../components/Chart/BarChart';\nimport SessionHelper from '../../helpers/SessionHelper';\nimport Copyright from '../../components/Footer/Copyright';\nimport AuthorizationHelper from '../../helpers/AuthorizationHelper';\nimport moment from 'moment';\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport IconTooltipButton from '../../components/Buttons/IconTooltipButton';\nimport TableBackdrop from '../../components/Table/TableBackdrop';\nimport ChartsPDF from '../../components/Reports/ChartsPDF';\nimport { Bar } from 'recharts';\nimport { \n  eventPerTypeForDepartment, \n  eventPerTypePerUserForDepartment \n} from '../../components/Chart/ChartData';\nimport { MonthPicker } from '../../components/Selectors/DatePickers';\nimport 'moment/locale/tr';\nimport { Autocomplete } from '@material-ui/lab';\nimport Request from '../../helpers/Request';\nimport { TextField } from '@material-ui/core';\nimport { inspectionTypes } from '../../assets/constants';\n\nconst COLORS = ['#0088FE', '#FFBB28'];\nconst fixedHeight = 500;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    maxHeight: fixedHeight,\n  },\n  textField: {\n    width: \"90%\",\n    margin: 10\n  },\n  footerComponent: {\n    display:  \"flex\",\n    flexDirection: \"column\"\n  },\n  rate: {\n    fontSize: 18\n  },\n  percentage: {\n    margin: 91\n  },\n  dateFooter: {\n    marginTop: 30,\n    marginLeft: 0,\n    marginRight: \"auto\"\n  }\n}));\n\n/**\n * A dashboard component that renders charts depending on the role of the user.\n */\nexport default function GoalCharts() {\n  moment.locale(\"tr\");\n  const user = SessionHelper.getUser();\n  const roles = user.roles;\n  const authorization = AuthorizationHelper.getAuthorizationForPage(roles, \"comitteeDepartmentGoalCharts\");\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let collator = new Intl.Collator(\"tr\");\n\n  const [department, setDepartment] = React.useState(user?.department?.id);\n  const [departments, setDepartments] = React.useState([]);\n  const [eventPerTypeForDepartmentData, setEventPerTypeForDepartmentData] = React.useState(null);\n  const [eventPerTypePerUserForDepartmentData, setEventPerTypePerUserForDepartmentData] = React.useState(null);\n  const [backdropLoading, setBackdropLoading] = React.useState(false);\n  const [startDate, setStartDate] = React.useState(moment().utc().set(\"date\", 1).set(\"hour\", 0).set(\"minute\", 1).toISOString());\n  const [endDate, setEndDate] = React.useState(moment().utc().set(\"date\", 1).add(1, \"month\").set(\"hour\", 23).set(\"minute\", 59).toISOString());\n\n  const init = useCallback(async () => {\n    setDepartments(await getDepartments());\n    setEventPerTypeForDepartmentData(await eventPerTypeForDepartment(startDate, endDate, department));\n    setEventPerTypePerUserForDepartmentData(await eventPerTypePerUserForDepartment(startDate, endDate, department));\n  }, [endDate, startDate, department]);\n  React.useEffect(() => {\n    init();\n  }, [init]);\n  \n  const getDepartments = async () => {\n    const params = {\n      \"only-edc\": true\n    }\n    const resp = await Request(\"get\", \"/api/departments/\" + user.id + \"/get-according-to-user\", null, params);\n    const data = resp.data;\n    let arr = [];\n    for (let i = 0; i < data.length; i++) {\n      let dept = {};\n      dept[\"name\"] = data[i].name;\n      dept[\"id\"] = data[i].id;\n      arr.push(dept);\n    }\n    return arr;\n  }\n\n  const exportPdf = async () => {\n    setBackdropLoading(true);\n    ChartsPDF(document.getElementsByClassName(\"MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3\")[1], fixedHeight, setBackdropLoading);\n  }\n\n  /**\n   * Formats the data array to use with the chart.\n   * @param {data: obj[]} data chart data to format\n   * @return {obj[]} formatted data\n   */\n  const formatDataForBarGeneralEventsChart = (data) => {\n    let chartData = [];\n    for (let p in data) {\n      let name = \"\";\n      let row = {};\n      for (let prop in data[p]) {\n        if (data[p][prop] !== null) {\n          if (prop === \"goalInMonths\") { row[\"Hedef\"] = data[p][prop] }\n          else if (prop === \"completedInspections\") { row[\"Gerçekleşen\"] = data[p][prop] }\n          else if (prop === \"type\") { name = inspectionTypes[`${data[p][prop]}`] }\n        }\n      }\n      row.name = name;\n      chartData.push(row);\n    };\n    return chartData;\n  }\n  /**\n   * Formats the data array to use with the chart.\n   * @param {data: obj[]} data chart data to format\n   * @return {obj[]} formatted data\n   */\n  const formatDataForBarSpecificEventChart = (data, dataSet) => {\n    let chartData = [];\n    for (let p in data) {\n      let name = \"\";\n      let row = {};\n      for (let prop in data[p]) {\n        if (data[p][prop] !== null) {\n          if (prop === \"statistics\") {\n            let type = null;\n            if(dataSet === \"oditEventPerUserForDepartment\") {\n              type = data[p][prop][0];\n            } else if(dataSet === \"apekEventPerUserForDepartment\") {\n              type = data[p][prop][2];\n            } else if(dataSet === \"isgEventPerUserForDepartment\") {\n              type = data[p][prop][3];\n            } else if(dataSet === \"briefingEventPerUserForDepartment\") {\n              type = data[p][prop][1];\n            }\n            row[\"Hedef\"] = type.goalInMonths;\n            row[\"Gerçekleşen\"] = type.completedInspections;\n          }\n          else if (prop === \"user\") { name = data[p][prop].fName + \" \" + data[p][prop].lName }\n        }\n      }\n      row.name = name;\n      chartData.push(row);\n    };\n    return chartData;\n  }\n\n  const completionRate = useCallback((data) => {\n    let innerData = data.data;\n    return(\n      <div className={classes.footerComponent}>\n        {innerData[0] &&\n        <label className={classes.rate}>\n          Gerçekleşme Oranı: <span className={classes.percentage}>%{innerData[0][\"Gerçekleşen\"] / innerData[0][\"Hedef\"] * 100}</span>\n          <span className={classes.percentage}>%{innerData[1][\"Gerçekleşen\"] / innerData[1][\"Hedef\"] * 100}</span>\n          <span className={classes.percentage}>%{innerData[2][\"Gerçekleşen\"] / innerData[2][\"Hedef\"] * 100}</span>\n          <span className={classes.percentage}>%{innerData[3][\"Gerçekleşen\"] / innerData[3][\"Hedef\"] * 100}</span>\n        </label>}\n        <DateFooter/>\n      </div>\n    )\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [classes, startDate, endDate])\n\n  const DateFooter = useCallback(() => {\n    return(\n      <div className={classes.footerComponent}>\n        <label className={classes.dateFooter}>{moment(startDate).format(\"MMM yyyy\")}</label>\n      </div>\n    )\n  }, [startDate, classes])\n\n  const getDepartmentFromId = (id) => {\n    for(let i = 0; i < departments.length; i++) {\n      if(departments[i].id === id) {\n        return departments[i];\n      }\n    }\n    return null;\n  }\n\n  const RenderAutocomplete = () => {\n    return(\n      <Autocomplete\n        id=\"combo-box\"\n        options={departments.sort(function(a, b) {\n          return collator.compare(a.name, b.name)\n        })}\n        getOptionLabel={(option) => option.name}\n        fullWidth={true}\n        defaultValue={department ? getDepartmentFromId(department) : null}\n        onChange={(event, value) => setDepartment(value?.id)} \n        renderInput={(params) => <TextField {...params} required label=\"Bölüm\" className={classes.textField}/>}\n      />\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <TableBackdrop backdropLoading={backdropLoading} />\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3} justify=\"space-between\">\n            {/* SETTINGS */}\n            <Grid item xs={10}>\n              <Paper className={classes.paper} style={{height: 100}}>\n                <Grid container>\n                  <Grid xs={6}>\n                    <MonthPicker \n                      style={classes.textField}\n                      label=\"Rapor Tarihi\" \n                      value={moment(startDate)} \n                      shrink={startDate} \n                      onChangeFunc={value => {\n                        setStartDate(moment(value).toISOString());\n                        setEndDate(moment(value).utc().add(1, \"month\").set(\"hour\", 23).set(\"minute\", 59).toISOString());\n                      }}\n                    />\n                  </Grid>\n                  <Grid xs={6}>\n                    <RenderAutocomplete />\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n\n            {/* EXPORT BUTTON */}\n            <Grid item>\n              <Paper className={classes.paper} style={{height: 100, width: 100}}>\n                <div style={{margin: \"auto\", marginLeft: \"32%\"}}>\n                  <IconTooltipButton title=\"PDF Olarak İndir\" onClick={exportPdf}>\n                    <SaveAlt/>\n                  </IconTooltipButton>\n                </div>\n              </Paper>\n            </Grid>\n            \n            <Grid container spacing={3}>\n            {/* CHARTS */}\n            {authorization.view &&\n              <Grid item xs={12}>\n                <Paper className={fixedHeightPaper}>\n                  <BarChart \n                    dataSet={formatDataForBarGeneralEventsChart(eventPerTypeForDepartmentData)} \n                    title={\"Yaşam Güvenliği Komitesi Gerçekleşmeleri\"}\n                    FooterComponent={(data) => completionRate(data)}>\n                    <Bar dataKey=\"Hedef\" fill={COLORS[0]} />\n                    <Bar dataKey=\"Gerçekleşen\" fill={COLORS[1]} />\n                  </BarChart>\n                </Paper>\n              </Grid>}\n            {authorization.view &&\n              <Grid item xs={12}>\n                <Paper className={fixedHeightPaper}>\n                  <BarChart \n                    dataSet={formatDataForBarSpecificEventChart(eventPerTypePerUserForDepartmentData, \"oditEventPerUserForDepartment\")} \n                    title={\"ODİT (Davranış Odaklı Denetim) Gerçekleşmeleri\"}\n                    FooterComponent={DateFooter}>\n                    <Bar dataKey=\"Hedef\" fill={COLORS[0]} />\n                    <Bar dataKey=\"Gerçekleşen\" fill={COLORS[1]} />\n                  </BarChart>\n                </Paper>\n              </Grid>}\n            {authorization.view &&\n              <Grid item xs={12}>\n                <Paper className={fixedHeightPaper}>\n                  <BarChart \n                    dataSet={formatDataForBarSpecificEventChart(eventPerTypePerUserForDepartmentData, \"apekEventPerUserForDepartment\")} \n                    title={\"APEK (Aylık Planlı Emniyet Kontrolü) Gerçekleşmeleri\"}\n                    FooterComponent={DateFooter}>\n                    <Bar dataKey=\"Hedef\" fill={COLORS[0]} />\n                    <Bar dataKey=\"Gerçekleşen\" fill={COLORS[1]} />\n                  </BarChart>\n                </Paper>\n              </Grid>}\n            {authorization.view &&\n              <Grid item xs={12}>\n                <Paper className={fixedHeightPaper}>\n                  <BarChart \n                    dataSet={formatDataForBarSpecificEventChart(eventPerTypePerUserForDepartmentData, \"isgEventPerUserForDepartment\")} \n                    title={\"İSG Çevre ve Uygunsuzlukları Gerçekleşmeleri\"}\n                    FooterComponent={DateFooter}>\n                    <Bar dataKey=\"Hedef\" fill={COLORS[0]} />\n                    <Bar dataKey=\"Gerçekleşen\" fill={COLORS[1]} />\n                  </BarChart>\n                </Paper>\n              </Grid>}\n            {authorization.view &&\n              <Grid item xs={12}>\n                <Paper className={fixedHeightPaper}>\n                  <BarChart \n                    dataSet={formatDataForBarSpecificEventChart(eventPerTypePerUserForDepartmentData, \"briefingEventPerUserForDepartment\")} \n                    title={\"Bire Bir Brifing Yaşam Güvenliği Konuşmaları Gerçekleşmeleri\"}\n                    FooterComponent={DateFooter}>\n                    <Bar dataKey=\"Hedef\" fill={COLORS[0]} />\n                    <Bar dataKey=\"Gerçekleşen\" fill={COLORS[1]} />\n                  </BarChart>\n                </Paper>\n              </Grid>}\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright string={\"DELTA Smart Technologies\"} url={\"https://deltasmart.tech/en/home/\"} date={new Date().getFullYear()} />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\CitiesTownsPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GoalsPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\TaskPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\AllTasksPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\PersonalTaskPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\navbar.js",["650"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SessionHelper from '../../helpers/SessionHelper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LanguageHelper from '../../helpers/LanguageHelper';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport TopBar from './components/TopBar';\r\nimport NavDrawer from './components/NavDrawer';\r\nimport AuthorizationHelper from '../../helpers/AuthorizationHelper';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '1em'\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'rgba(0,0,0,.2)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb:hover': {\r\n      backgroundColor: 'rgba(0,0,0,.3)',\r\n    }\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: drawerWidth,\r\n  }\r\n}));\r\n\r\n/**\r\n * A topbar + sidebar component that takes in another component to render as the content\r\n * @param {component: obj} component the page to render \r\n */\r\nexport default function Navbar({ component }) {\r\n  const language = LanguageHelper.getLanguage();\r\n  const drawerList = [{ Label: language.sidebar.dashboard, Path: \"/dashboard\" }];\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const roles = SessionHelper.getUser().roles;\r\n  const authorization = AuthorizationHelper.getViewAuthorizationForAll(roles);\r\n  const theme = useTheme();\r\n  const darkTheme = createMuiTheme({ palette: { type: 'dark' } });\r\n  const lightTheme = createMuiTheme({ palette: { type: 'light' } });\r\n\r\n  const [darkMode, setDarkMode] = React.useState(localStorage.getItem(\"darkMode\"));\r\n  const [languageState, setLanguage] = React.useState(LanguageHelper.getLanguage());\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  authorization.usersTable && drawerList.push({ Label: language.sidebar.users, Path: \"/users\" });\r\n  authorization.yasamUsersTable && drawerList.push({ Label: language.sidebar.yasamUsers, Path: \"/yasamusers\" });\r\n  authorization.companiesTable && drawerList.push({ Label: language.sidebar.companies, Path: \"/companies\" });\r\n  authorization.departmentsTable && drawerList.push({ Label: language.sidebar.departments, Path: \"/departments\" });\r\n  authorization.citiesTownsTable && drawerList.push({ Label: language.sidebar.citiesTowns, Path: \"/cities-towns\" });\r\n  authorization.formTable && drawerList.push({ Label: language.sidebar.forms, Path: \"/forms\" });\r\n  //authorization.formTemplateTable && drawerList.push({ Label: language.sidebar.formtemplates, Path: \"/formtemplates\" });\r\n  authorization.unsuitTaskTable && drawerList.push({ Label: language.sidebar.nonCompianceTasks, Path: \"/unsuitreports\" });\r\n  authorization.workAccidentTable && \r\n  drawerList.push({\r\n    label: language.sidebar.workaccidents, \r\n    values: [\r\n      { Label: language.sidebar.workaccidents_main, Path: \"/workaccidents-main\" },\r\n      { Label: language.sidebar.workaccidents_epdk, Path: \"/workaccidents-epdk\" },\r\n      { Label: language.sidebar.workaccidents_elder, Path: \"/workaccidents-elder\" },\r\n      { Label: language.sidebar.workaccidents_dir, Path: \"/workaccidents-dir\" },\r\n      { Label: language.sidebar.workaccidents_tedas, Path: \"/workaccidents-tedas\" }\r\n    ],\r\n    open: false\r\n  });\r\n  drawerList.push({\r\n    label: language.sidebar.auditTasks, \r\n    values: [\r\n      authorization.personalTaskTable && { Label: language.sidebar.personalAuditTasks, Path: \"/personaltasks\" },\r\n      authorization.taskTable && { Label: language.sidebar.departmentAuditTasks, Path: \"/tasks\" },\r\n      authorization.allTasksTable && { Label: language.sidebar.companyAuditTasks, Path: \"/alltasks\" },\r\n    ],\r\n    open: false\r\n  });\r\n  drawerList.push({\r\n    label: language.sidebar.nonCompianceTasks, \r\n    values: [\r\n      authorization.personalUnsuitTaskTable && { Label: language.sidebar.personalUnsuitTasks, Path: \"/unsuit-tasks-personal\" },\r\n      authorization.departmentUnsuitTaskTable && { Label: language.sidebar.departmentUnsuitTasks, Path: \"/unsuit-tasks-department\" },\r\n      authorization.allUnsuitTaskTable && { Label: language.sidebar.allUnsuitTasks, Path: \"/unsuit-tasks-all\" },\r\n    ],\r\n    open: false\r\n  });\r\n  drawerList.push({\r\n    label: language.sidebar.reports, \r\n    values: [\r\n      authorization.comitteeDepartmentGoalCharts && { Label: language.sidebar.goalCharts, Path: \"/goalcharts\" },\r\n      authorization.contractorFieldInspection && { Label: language.sidebar.contractorFieldInspection, Path: \"/contractor-field-inspection\" },\r\n    ],\r\n    open: false\r\n  });\r\n\r\n  const logout = () => {\r\n    SessionHelper.deleteUser();\r\n    history.push('signIn');\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode === \"true\" ? darkTheme : lightTheme}>\r\n      <CssBaseline>\r\n        <TopBar\r\n          open={open}\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          logout={logout} />\r\n\r\n        <NavDrawer\r\n          darkMode={darkMode} \r\n          setDarkMode={setDarkMode} \r\n          setLanguage={setLanguage}\r\n          open={open}\r\n          drawerList={drawerList}\r\n          theme={theme}\r\n          handleDrawerClose={handleDrawerClose}\r\n        />\r\n\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {component}\r\n        </main>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  )\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\TaskDetailsPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\landingPage\\index.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\LanguageHelper.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\AuthorizationHelper.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\YasamUserTable.js",["651","652"],"import React, { useCallback } from \"react\";\r\nimport LanguageHelper from \"../../../helpers/LanguageHelper\";\r\nimport FetchData from './FetchData';\r\nimport UserModal from './UserModal';\r\nimport GetOptions from \"./GetOptions\";\r\nimport CustomSnackbar from \"../../../components/Snackbar/Snackbar\";\r\nimport Table from \"../../../components/Table/Table\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport Request from \"../../../helpers/Request\";\r\nimport SessionHelper from \"../../../helpers/SessionHelper\";\r\nimport AuthorizationHelper from \"../../../helpers/AuthorizationHelper\";\r\nimport { roles } from \"../../../assets/constants\";\r\nimport showSnackbar from \"../../../components/Utils/showSnackbar\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    height: 100,\r\n    overflow: \"auto\"\r\n  },\r\n}));\r\n\r\nexport default function YasamUserTable() {\r\n  const language = LanguageHelper.getLanguage();\r\n  const tableRef = React.useRef();\r\n  const classes = useStyles();\r\n  const localization = {...(language.tableLocalization)};\r\n  localization.body.deleteTooltip = \"Komiteden Çıkar\";\r\n\r\n  const [numOfEntries, setNumOfEntries] = React.useState(0);\r\n  const [columns, setColumns] = React.useState([]);\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n  const [severity, setSeverity] = React.useState(\"info\");\r\n  const [oldUser, setOldUser] = React.useState(null);\r\n  const [options, setOptions] = React.useState({});\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const init = useCallback(async () => {\r\n    let options = await GetOptions();\r\n    setColumns([\r\n      { title: \"No\", field: \"id\", editable: \"never\" },\r\n      { title: \"Adı\", field: \"firstName\", editable: \"never\" },\r\n      { title: \"Soyadı\", field: \"lastName\", editable: \"never\" },\r\n      { title: \"Şirket Adı\", field: \"company\", editable: \"never\" },\r\n      { title: \"Bölümü\", field: \"department\", editable: \"never\" },\r\n      { title: \"Rolü\", field: \"roles\", render: rowData => \r\n        <div>\r\n          <List className={classes.list}>\r\n            {\r\n              rowData.roles.map((data, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText secondary={roles[`${data.name}`]}/>\r\n                </ListItem>\r\n              ))\r\n            }\r\n          </List>\r\n        </div>\r\n      },\r\n      { title: \"Aylık Denetim Görevi Hedefleri\", field: \"goal\", render: rowData => \r\n        <Button variant=\"outlined\" onClick={() => goToGoals(rowData.id)}>HEDEFLER</Button>\r\n      },\r\n    ]);\r\n    setOptions(options);\r\n  }, [classes]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const goToGoals = async (id) => {\r\n    window.open('/goals/' + id);\r\n  }\r\n\r\n  const handleOpenModal = async (data) => {\r\n    setOldUser(data);\r\n    setModal(true);\r\n  }\r\n\r\n  const removeFromCommittee = async (data) => {\r\n    const userData = await Request(\"get\", \"/api/users/\" + data.id);\r\n    const body = userData.data;\r\n    for(let index in body.roles) {\r\n      if(body.roles[index].name === \"ROLE_YAŞAM_GÜVENLİĞİ_KOMİTESİ_UYESİ\") {\r\n        body.roles.splice(index, 1);\r\n      } else {\r\n        body.roles[index] = body.roles[index].name;\r\n      }\r\n    }\r\n    if(userData.status === 200) {\r\n      const resp = await Request(\"patch\", \"/api/users\", body);\r\n      console.log(resp);\r\n      showSnackbar(resp, setSeverity, setSnackbarMessage, setSnackbar, language.etc.deleted, tableRef);\r\n    } else {\r\n      setSeverity(\"error\");\r\n      setSnackbarMessage(language.login.unexpectedError);\r\n      setSnackbar(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CustomSnackbar\r\n        snackbar={snackbar}\r\n        setSnackbar={setSnackbar}\r\n        snackbarMessage={snackbarMessage}\r\n        severity={severity}\r\n      />\r\n      <UserModal\r\n        modal={modal} \r\n        setModal={setModal} \r\n        setSnackbarMessage={setSnackbarMessage} \r\n        setSnackbar={setSnackbar} \r\n        setSeverity={setSeverity}\r\n        tableRef={tableRef} \r\n        oldUserProps={oldUser}\r\n        opts={options}\r\n      />\r\n      <Table\r\n        tableName={language.sidebar.yasamUsers}\r\n        authName=\"yasamUsersTable\"\r\n        columns={columns}\r\n        tableRef={tableRef}\r\n        localization={localization}\r\n        handleOpenModal={handleOpenModal}\r\n        deleteEntry={removeFromCommittee}\r\n        setSnackbar={setSnackbar}\r\n        setSnackbarMessage={setSnackbarMessage}\r\n        setSeverity={setSeverity}\r\n        fetchData={FetchData}\r\n        numOfEntries={numOfEntries}\r\n        setNumOfEntries={setNumOfEntries}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GoalForm.js",["653","654"],"import React from \"react\";\r\nimport Request from \"../../../helpers/Request\";\r\nimport { Backdrop, Button, Fade, FormControl, makeStyles, Modal, TextField } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport LanguageHelper from \"../../../helpers/LanguageHelper\";\r\nimport jsonMap from \"../../../components/Utils/jsonMap\";\r\nimport { MonthPicker } from \"../../../components/Selectors/DatePickers\";\r\nimport { TextArea, TextSelector } from \"../../../components/Fields/TextFields\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    marginTop: \"10px\"\r\n  },\r\n  formControl: {\r\n    margin: 20,\r\n    width: \"25vw\",\r\n    maxWidth: 400,\r\n    maxHeight: \"42vw\",\r\n  },\r\n  textField: {\r\n    marginBottom: \"2vw\"\r\n  },\r\n  dateField: {\r\n    marginBottom: \"2vw\",\r\n    marginTop: \"-0.5vw\"\t\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: \"none\",\r\n  },\r\n  paper: {\r\n    outline: \"none\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"none\",\r\n    borderRadius: \"15px\",\r\n    padding: theme.spacing(2, 4, 3)\r\n  },\r\n}));\r\n\r\nexport default function GoalForm({modal, handleCloseModal, row, options, update, refresh, setRefresh, goalProps, setGoalProps, setSeverity, setSnackbar, setSnackbarMessage}) {\r\n  const language = LanguageHelper.getLanguage();\r\n  const classes = useStyles();\r\n\r\n  const updateGoals = async () => {\r\n    const resp = await Request(\"put\", \"/api/inspection-goals/\" + row[0], goalProps);\r\n    console.log(resp);\r\n    if(resp.status !== 200) {\r\n      if(resp.data && resp.data.message) {\r\n        setSeverity(\"error\");\r\n        setSnackbarMessage(resp.data.message);\r\n        setSnackbar(true);\r\n      } else {\r\n        setSeverity(\"error\");\r\n        setSnackbarMessage(language.login.unexpectedError);\r\n        setSnackbar(true);\r\n      }\r\n    } else {\r\n      setRefresh(!refresh);\r\n      setSeverity(\"success\");\r\n      setSnackbarMessage(language.etc.updated);\r\n      setSnackbar(true);\r\n    }\r\n    handleCloseModal();\r\n  }\r\n\r\n  const submitGoals = async () => {\r\n    const resp = await Request(\"post\", \"/api/inspection-goals\", goalProps);\r\n    console.log(resp);\r\n    if(resp.status !== 200) {\r\n      if(resp.data && resp.data.message) {\r\n        setSeverity(\"error\");\r\n        setSnackbarMessage(resp.data.message);\r\n        setSnackbar(true);\r\n      } else {\r\n        setSeverity(\"error\");\r\n        setSnackbarMessage(language.login.unexpectedError);\r\n        setSnackbar(true);\r\n      }\r\n    } else {\r\n      setRefresh(!refresh);\r\n      setSeverity(\"success\");\r\n      setSnackbarMessage(language.etc.added);\r\n      setSnackbar(true);\r\n    }\r\n    handleCloseModal();\r\n  }\r\n  console.log(goalProps);\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={modal}\r\n        onClose={handleCloseModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={modal}>\r\n          <div className={classes.paper}>\r\n            <FormControl noValidate autoComplete=\"off\" className={classes.formControl}>\r\n              <div> {/* GOALS */}\r\n                <TextSelector\r\n                  required\r\n                  label={\"Davranış Odaklı Denetim Hedefi\"}\r\n                  value={goalProps.inspectionGoalsInMonths.BEHAVIORDRIVENAUDITING}\r\n                  style={classes.textField}\r\n                  onChangeFunc={value => setGoalProps({...goalProps, inspectionGoalsInMonths: {...goalProps.inspectionGoalsInMonths, BEHAVIORDRIVENAUDITING: value.target.value}})}\r\n                  options={jsonMap(\"taskGoal\", options)}\r\n                />\r\n                <TextSelector\r\n                  required\r\n                  label={\"Briefing Hedefi\"}\r\n                  value={goalProps.inspectionGoalsInMonths.BRIEFING}\r\n                  style={classes.textField}\r\n                  onChangeFunc={value => setGoalProps({...goalProps, inspectionGoalsInMonths: {...goalProps.inspectionGoalsInMonths, BRIEFING: value.target.value}})}\r\n                  options={jsonMap(\"taskGoal\", options)}\r\n                />\r\n                <TextSelector\r\n                  required\r\n                  label={\"Aylık Planlı Emniyet Kontrolleri Hedefi\"}\r\n                  value={goalProps.inspectionGoalsInMonths.MONTLYPLANNEDSAFETYCHECK}\r\n                  style={classes.textField}\r\n                  onChangeFunc={value => setGoalProps({...goalProps, inspectionGoalsInMonths: {...goalProps.inspectionGoalsInMonths, MONTLYPLANNEDSAFETYCHECK: value.target.value}})}\r\n                  options={jsonMap(\"taskGoal\", options)}\r\n                />\r\n                <TextSelector\r\n                  required\r\n                  label={\"İSG ve Çevre Uygunsuzluk Denetimi Hedefi\"}\r\n                  value={goalProps.inspectionGoalsInMonths.NEARMISSREPORT}\r\n                  style={classes.textField}\r\n                  onChangeFunc={value => setGoalProps({...goalProps, inspectionGoalsInMonths: {...goalProps.inspectionGoalsInMonths, NEARMISSREPORT: value.target.value}})}\r\n                  options={jsonMap(\"taskGoal\", options)}\r\n                />\r\n              </div>\r\n              {/* VALID FROM */}\r\n              <MonthPicker\r\n                style={classes.dateField}\r\n                label={\"Geçerlilik Başlangıç\"}\r\n                value={goalProps.validFrom ? moment(goalProps.validFrom).add(\"hours\", 3) : null} \r\n                shrink={goalProps.validFrom} \r\n                onChangeFunc={value => setGoalProps({...goalProps, validFrom: moment(value).utc().date(1).set(\"hours\", 0).set(\"minutes\", 1).toISOString()})}\r\n              />\r\n              {/* VALID UNTIL */}\r\n              <MonthPicker\r\n                style={classes.dateField}\r\n                label={\"Geçerlilik Bitiş\"}\r\n                value={goalProps.validUntil ? moment(goalProps.validUntil).add(\"hours\", -3) : null} \r\n                shrink={goalProps.validUntil} \r\n                onChangeFunc={value => setGoalProps({...goalProps, validUntil: (new moment(value)).utc().date(1).set(\"hours\", 23).set(\"minutes\", 59).add(\"months\", 1).add(\"days\", -1).toISOString()})}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => update ? updateGoals() : submitGoals()}\r\n                className={classes.submit}>\r\n                {update ? \"Güncelle\" : \"Oluştur\"}\r\n              </Button>\r\n            </FormControl>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\helpers\\Request.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\BarChart.js",["655"],"import React, { useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as FileSaver from 'file-saver';\r\nimport {\r\n  BarChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport { Button, Grid, makeStyles } from '@material-ui/core';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartContainer: {\r\n    display:\"flex\", \r\n    flexDirection:\"column\",\r\n  },\r\n  chartLabel: {\r\n    fontSize: 20,\r\n    textAlign: \"left\",\r\n    margin: \"0 auto\"\r\n  },\r\n  button: {\r\n    float: \"right\"\r\n  },\r\n  header: {\r\n    marginBottom: 20\r\n  }\r\n}));\r\n\r\n/**\r\n * A BarChart component that can use the appropriate dataset depending on the variable given to it.\r\n * @param {dataSet: string} dataSet determines which dataset to use \r\n */\r\nexport default function Chart({ dataSet, children, title, FooterComponent }) {\r\n  const darkMode = localStorage.getItem(\"darkMode\");\r\n  const classes = useStyles();\r\n\r\n  const [labelHeight, setLabelHeight] = React.useState(30);\r\n  const [isEmpty, setIsEmpty] = React.useState(true);\r\n  const [currentChart, setCurrentChart] = React.useState(null);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const checkIfDataEmpty = useCallback((data) => {\r\n    setIsEmpty(true);\r\n    for(let index in data) {\r\n      for(let prop in data[index]) {\r\n        let temp = data[index][prop];\r\n        if(!isNaN(temp) && temp > 0) {\r\n          setIsEmpty(false);\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const init = useCallback(async () => {\r\n    setData(dataSet);\r\n    dataSet && setLabelHeight(dataSet.length > 10 ? 120 : getLabelHeight(dataSet));\r\n  }, [dataSet, labelHeight]);\r\n  React.useEffect(() => {\r\n    init();\r\n    checkIfDataEmpty(dataSet);\r\n  }, [init, checkIfDataEmpty, dataSet]);\r\n\r\n  async function exportChart() {\r\n    let chart = ReactDOM.findDOMNode(currentChart).cloneNode(true);\r\n    document.body.appendChild(chart);\r\n    chart.style.color = \"black\";\r\n    let toolbar = chart.getElementsByClassName(\"recharts-wrapper\")[0];\r\n    toolbar.style.color = \"black\";\r\n    let texts = chart.getElementsByTagName(\"text\");\r\n    let button = chart.getElementsByTagName(\"button\")[0];\r\n    button.remove();\r\n    for(let index in texts) {\r\n      if(texts[index].style) {\r\n        texts[index].style.fill = \"black\";\r\n      }\r\n    }\r\n    html2canvas(chart, {\r\n      x: window.pageXOffset + chart.getBoundingClientRect().x,\r\n      y: window.pageYOffset + chart.getBoundingClientRect().y\r\n    }).then(function(canvas) {\r\n      let png = canvas.toDataURL();\r\n      FileSaver.saveAs(png, \"bar-chart.png\");\r\n    });\r\n    document.body.removeChild(chart);\r\n  }\r\n\r\n  const getLabelHeight = (data) => {\r\n    let height = 30;\r\n    for(let index in data) {\r\n      const str = data[index].name;\r\n      const newHeight = 30 + (countWords(str) - 1) * 15;\r\n      if(newHeight > height) {\r\n        height = newHeight;\r\n      }\r\n    }\r\n    return height;\r\n  }\r\n\r\n  const countWords = (str) => {\r\n    return str.trim().split(/\\s+/).length;\r\n  }\r\n\r\n  const CustomizedAxisTick = ({props}) => {\r\n    const {x, y, payload} = props;\r\n    const color = darkMode === \"true\" ? \"white\" : \"black\";\r\n\r\n    return (\r\n      <Text \r\n        x={x} \r\n        y={y} \r\n        width={100} \r\n        angle={data.length > 10 ? -55 : 0}\r\n        style={{fill: color}} \r\n        textAnchor={data.length > 10 ? \"end\" : \"middle\"} \r\n        verticalAnchor=\"start\"\r\n      >\r\n        {payload.value}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  return (\r\n   <div>\r\n      {!isEmpty ?\r\n        <div ref={(chart) => setCurrentChart(chart)}>\r\n          <Grid container className={classes.header}>\r\n            <Grid item xs={1}/>\r\n            <Grid item xs={10}><label className={classes.chartLabel}>{title}</label></Grid>\r\n            <Grid item xs={1}><Button onClick={exportChart} variant=\"outlined\" className={classes.button}>İNDİR</Button></Grid>\r\n          </Grid>\r\n            <ResponsiveContainer width=\"100%\" height={dataSet.length > 10 ? 350 : 300}>\r\n              <BarChart\r\n                className=\"bar-chart-component\"\r\n                data={data}\r\n                margin={{\r\n                  top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n                style={{margin: \"0 auto\"}}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis \r\n                  height={labelHeight} \r\n                  interval={0}\r\n                  dataKey=\"name\" \r\n                  stroke={darkMode === \"true\" ? \"white\" : \"black\"}\r\n                  tick={(props) => <CustomizedAxisTick props={props}/>} \r\n                />\r\n                <YAxis stroke={darkMode === \"true\" ? \"white\" : \"black\"} />\r\n                <Tooltip />\r\n                <Legend />\r\n                {children}\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            {FooterComponent && <div><FooterComponent data={data} /></div>}\r\n        </div>\r\n        :\r\n        <div>\r\n          <label className={classes.chartLabel}>{title}</label>\r\n          <label style={{display: \"block\", marginTop: 10, fontSize: 16, color: \"red\"}}>Veri Yok</label>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\ChartData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Footer\\Copyright.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FormTemplateTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Chart\\PieChart.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\TableBackdrop.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Reports\\ChartsPDF.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\AltTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Buttons\\IconTooltipButton.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Selectors\\DatePickers.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\UnsuitTable.js",["656"],"import React, { useCallback } from 'react';\r\nimport SessionHelper from '../../../helpers/SessionHelper';\r\nimport LanguageHelper from '../../../helpers/LanguageHelper';\r\nimport FetchData from './FetchData';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport AuthorizationHelper from '../../../helpers/AuthorizationHelper';\r\nimport Request from '../../../helpers/Request';\r\nimport CustomSnackbar from \"../../../components/Snackbar/Snackbar\";\r\nimport UnsuitDetails from '../../unsuitdetailspage/components/UnsuitDetails';\r\nimport IconTooltipButton from '../../../components/Buttons/IconTooltipButton';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport StatusColumn from './StatusColumn';\r\nimport Table from '../../../components/Table/Table';\r\nimport TableBackdrop from '../../../components/Table/TableBackdrop';\r\nimport GetOptions from './GetOptions';\r\nimport { taskStatuses } from \"../../../assets/constants\";\r\nimport GetFilterFields from \"./UnsuitFilters\";\r\nimport showSnackbar from '../../../components/Utils/showSnackbar';\r\n\r\n/**\r\n * A table component that lists the unsuitability correction reports.\r\n * Files of these reports can be found in their respective details panel.\r\n */\r\nexport default function UnsuitTable({type}) {\r\n  const language = LanguageHelper.getLanguage();\r\n  const tableRef = React.createRef();\r\n  const user = SessionHelper.getUser();\r\n  const roles = user.roles;\r\n\r\n  const authorization = \r\n    (type === \"all\" && AuthorizationHelper.getAuthorizationForPage(roles, \"allUnsuitTaskTable\")) ||\r\n    (type === \"personal\" && AuthorizationHelper.getAuthorizationForPage(roles, \"personalUnsuitTaskTable\")) ||\r\n    (type === \"department\" && AuthorizationHelper.getAuthorizationForPage(roles, \"departmentUnsuitTaskTable\"));\r\n\r\n  const authName = \r\n    (type === \"all\" && \"allUnsuitTaskTable\") ||\r\n    (type === \"personal\" && \"personalUnsuitTaskTable\") ||\r\n    (type === \"department\" && \"departmentUnsuitTaskTable\");\r\n\r\n  const title = \r\n    (type === \"all\" && language.sidebar.allUnsuitTasks) ||\r\n    (type === \"personal\" && language.sidebar.personalUnsuitTasks) ||\r\n    (type === \"department\" && language.sidebar.departmentUnsuitTasks);\r\n\r\n  const [columns, setColumns] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [numOfEntries, setNumOfEntries] = React.useState(0);\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n  const [severity, setSeverity] = React.useState(\"info\");\r\n  const [options, setOptions] = React.useState([]);\r\n  \r\n  const init = useCallback(async () => {\r\n    const options = await GetOptions()\r\n    setOptions(options);\r\n    setColumns([\r\n      { title: language.tableColumns.id, field: \"id\", editable: \"never\" },\r\n      { title: language.tableColumns.name, field: \"fullName\", editable: \"never\" },\r\n      { title: \"Denetim Yapan Kişi\", field: \"inspectionUserName\", editable: \"never\", render: rowData =>\r\n          <div>\r\n            <label style={{marginRight: \"20px\"}}>{rowData.inspectionUserName}</label>\r\n            {rowData.inspection &&\r\n              <IconTooltipButton title={\"Denetim görevine git.\"} onClick={() => goToTask(rowData?.inspectionId)}> \r\n                <AssignmentIcon />\r\n              </IconTooltipButton>\r\n            }\r\n          </div>\r\n      },\r\n      { title: language.tableColumns.terminationDate, field: \"terminationTime\", type: \"date\", editable: \"never\" },\r\n      { title: language.tableColumns.completionDate, field: \"completionTime\", type: \"date\", editable: \"never\" },\r\n      { title: language.tableColumns.state, field: \"eStatus\", lookup: taskStatuses, render: rowData => {return(\r\n        <StatusColumn \r\n          rowData={rowData}\r\n          roles={roles}\r\n          jsonMap={jsonMap}\r\n          statuses={taskStatuses} \r\n          setSeverity={setSeverity}\r\n          setSnackbarMessage={setSnackbarMessage}\r\n          setSnackbar={setSnackbar}\r\n          tableRef={tableRef}\r\n        />\r\n      )}\r\n      },\r\n    ]);\r\n  }, [language, roles]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const goToTask = async (id) => {\r\n    window.open('/task/' + id);\r\n  }\r\n\r\n  const jsonMap = (json) => {\r\n    return (\r\n      json && Object.keys(json).map((data) => (\r\n        <MenuItem key={data} value={data}>\r\n          {json[data]}\r\n        </MenuItem>\r\n      ))\r\n    )\r\n  }\r\n\r\n  const removeUnsuitTask = async (oldData) => {\r\n    const resp = await Request(\"delete\", '/api/unsuitInspections/' + oldData.id);\r\n    console.log(resp);\r\n    showSnackbar(resp, setSeverity, setSnackbarMessage, setSnackbar, language.etc.deleted, tableRef);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CustomSnackbar\r\n        snackbar={snackbar}\r\n        setSnackbar={setSnackbar}\r\n        snackbarMessage={snackbarMessage}\r\n        severity={severity}\r\n      />\r\n      <TableBackdrop backdropLoading={loading} />\r\n      <Table\r\n        tableName={title}\r\n        authName={authName}\r\n        columns={columns}\r\n        tableRef={tableRef}\r\n        getFilterFields={GetFilterFields}\r\n        filterFieldProps={{type, options}}\r\n        setSnackbar={setSnackbar}\r\n        setSnackbarMessage={setSnackbarMessage}\r\n        setSeverity={setSeverity}\r\n        fetchData={FetchData}\r\n        deleteEntry={removeUnsuitTask}\r\n        numOfEntries={numOfEntries}\r\n        setNumOfEntries={setNumOfEntries}\r\n        isDeletable={(user, rowData) => roles.includes(\"ROLE_YAŞAM_GÜVENLİĞİ_KOMİTESİ_YÖNETİCİSİ\") ? true : false}\r\n        isDeleteHidden={rowData => !authorization.delete}\r\n        detailsPanel={rowData =>\r\n          <UnsuitDetails \r\n            setLoading={setLoading} \r\n            auth={authorization} \r\n            rowData={rowData} \r\n            tableRef={tableRef} \r\n            setSnackbar={setSnackbar} \r\n            setSnackbarMessage={setSnackbarMessage} \r\n            setSeverity={setSeverity}\r\n          />\r\n        }\r\n        type={type}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\UserTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\components\\FormTable.js",["657"],"import React, { useCallback } from 'react';\nimport Request from '../../../helpers/Request';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SessionHelper from '../../../helpers/SessionHelper';\nimport LanguageHelper from '../../../helpers/LanguageHelper';\nimport FilledForm from '../../../components/Forms/FilledForm';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Divider, CircularProgress, Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport IconTooltipButton from '../../../components/Buttons/IconTooltipButton';\nimport ListOfFiles from '../../../components/Lists/ListOfFiles';\nimport FetchData from './FetchData';\nimport CustomSnackbar from \"../../../components/Snackbar/Snackbar\";\nimport Table from '../../../components/Table/Table';\nimport GridOnIcon from '@material-ui/icons/GridOn';\nimport TableBackdrop from '../../../components/Table/TableBackdrop';\n\n/**\n  * Request to get the details of the inspection.\n  * @param {number} id id of the inspection\n  * @param {string} token token for authorization in string format\n  * @returns {obj} a json object that contains inspection details\n  */\nconst getInspectionDetails = async (id, token) => {\n  const resp = await Request(\"get\", \"/api/inspections/\" + id, { \"Authorization\": \"Bearer \" + token, \"Accept-Language\": \"tr-TR\" }, null);\n  return resp.data;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    padding: 10,\n    fontSize: 30,\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#2D3446',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: \"none\",\n  },\n  paper: {\n    outline: \"none\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"none\",\n    borderRadius: \"15px\",\n    padding: theme.spacing(2, 4, 3),\n    width: \"auto\",\n    height: \"min-content\"\n  },\n  inspectionButton: {\n    marginLeft: 60\n  },\n  propBorder: {\n    margin: \"10px\",\n    border: '1px solid #595959',\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    fontSize: \"0.8vw\"\n  },\n  pdfIconLabel: {\n    marginRight: \"60px\"\n  },\n  inspectionIconLabel: {\n    marginRight: \"60px\"\n  }\n}));\n\n/**\n * A table component that lists the forms. These forms can be opened in a new tab as pdf files.\n * The details of the inspection task that these forms are connected to can also be viewed in a modal.\n */\nexport default function FormTable() {\n  const token = SessionHelper.getUser().accessToken.toString();\n  const classes = useStyles();\n  const language = LanguageHelper.getLanguage();\n  const tableRef = React.useRef();\n\n  const [numOfEntries, setNumOfEntries] = React.useState(0);\n  const [snackbar, setSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [severity, setSeverity] = React.useState(\"info\");\n  const [columns, setColumns] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [inspectionDetails, setInspectionDetails] = React.useState(null);\n  const [modalLoading, setModalLoading] = React.useState(false);\n  const [backdropLoading, setBackdropLoading] = React.useState(false);\n\n  /**\n   * Opens the inspection details modal.\n   * @param {number} id id of the inspection\n   */\n  const handleOpen = useCallback(async (id) => {\n    setModalLoading(true);\n    setOpen(true);\n    setInspectionDetails(await getInspectionDetails(id, token));\n    setModalLoading(false);\n  }, [setOpen, setInspectionDetails, token]);\n\n  /**\n   * Closes the inspection details modal.\n   */\n  const handleClose = useCallback(() => {\n    setOpen(false);\n    setInspectionDetails(null);\n  }, [setOpen, setInspectionDetails]);\n\n  const init = useCallback(async () => {\n    setColumns([\n      {\n        title: language.tableColumns.formId, field: \"id\", render: rowData =>\n          <div style={{display:\"flex\", flexDirection:\"row\"}}>\n            <label className={classes.pdfIconLabel}>{rowData.id}</label>\n            <IconTooltipButton title={language.tableDetails.pdf} onClick={() => FilledForm(rowData.id, false, setSnackbar, setSnackbarMessage, setSeverity, setBackdropLoading)}>\n              <PictureAsPdfIcon />\n            </IconTooltipButton>\n            <IconTooltipButton title={\"Form'un XLSX Dosyası\"} onClick={() => FilledForm(rowData.id, true, setSnackbar, setSnackbarMessage, setSeverity, setBackdropLoading)}>\n              <GridOnIcon />\n            </IconTooltipButton>\n          </div>\n      },\n      {\n        title: language.tableColumns.inspectionId, field: \"inspectionId\", render: rowData =>\n          <div>\n            <label className={classes.inspectionIconLabel}>{rowData.inspectionId}</label>\n            <IconTooltipButton title={language.tableDetails.inspection} onClick={() => handleOpen(rowData.inspectionId)}>\n              <AssignmentIcon />\n            </IconTooltipButton>\n          </div>\n      },\n      { title: language.tableColumns.userId, field: \"userId\" },\n      { title: language.tableColumns.templateTitle, field: \"templateTitle\" },\n      { title: language.tableColumns.submissionDate, field: \"submissionDate\" },\n      { title: language.tableColumns.name, field: \"fullName\" },\n    ]);\n  }, [language, handleOpen, classes]);\n  React.useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <React.Fragment>\n      <TableBackdrop backdropLoading={backdropLoading} />\n      <CustomSnackbar\n        snackbar={snackbar}\n        setSnackbar={setSnackbar}\n        snackbarMessage={snackbarMessage}\n        severity={severity}\n      />\n      <Table\n        tableName={language.sidebar.forms}\n        authName=\"formTable\"\n        columns={columns}\n        tableRef={tableRef}\n        setSnackbar={setSnackbar}\n        setSnackbarMessage={setSnackbarMessage}\n        setSeverity={setSeverity}\n        fetchData={FetchData}\n        numOfEntries={numOfEntries}\n        setNumOfEntries={setNumOfEntries}\n        detailsPanel={rowData =>\n          <div className={classes.details}>\n            <label style={{ margin: 30 }}>{language.tableDetails.files}</label>\n            {rowData && rowData.fileKeys?.length > 0\n              ?\n              <div>\n                <ListOfFiles fileKeys={rowData.fileKeys}></ListOfFiles>\n              </div>\n              :\n              <p style={{color: \"red\", fontSize: 16}}>{language.tableDetails.noFile}<br /></p>}\n          </div>\n        }\n      />\n      <Modal\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            {inspectionDetails === null ? <CircularProgress color=\"secondary\" /> :\n              <Grid container>\n                <Grid item>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.inspectionId}</h2><Divider /><p>{inspectionDetails && inspectionDetails.id}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.name}</h2><Divider /><p>{inspectionDetails && inspectionDetails.user.fullName}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.inspectionType}</h2><Divider /><p>{inspectionDetails && inspectionDetails.inspectionType}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.unsuitability}</h2><Divider /><p>{inspectionDetails && inspectionDetails.unsuitability.toString()}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.status}</h2><Divider /><p>{inspectionDetails && inspectionDetails.eStatus}</p></div>\n                </Grid>\n                <Grid item>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.inspectionDate}</h2><Divider /><p>{inspectionDetails && (new moment(inspectionDetails.completionDate)).format(\"DD-MM-YYYY\")}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.terminationDate}</h2><Divider /><p>{inspectionDetails && (new moment(inspectionDetails.terminationTime)).format(\"DD-MM-YYYY\")}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.company}</h2><Divider /><p>{inspectionDetails && inspectionDetails.company.name}</p></div>\n                  <div className={classes.propBorder}><h2>{language.tableColumns.department}</h2><Divider /><p>{inspectionDetails && inspectionDetails.department.name}</p></div>\n                </Grid>\n                <Divider orientation=\"vertical\" flexItem={true} style={{ marginRight: \"10px\" }} />\n                <Grid item>\n                  <h2 className={classes.text}>{language.tableDetails.files}</h2>\n                  {inspectionDetails && inspectionDetails.fileKeys?.length > 0 ? <ListOfFiles fileKeys={inspectionDetails.fileKeys}></ListOfFiles> : <label>{language.tableDetails.noFile}</label>}\n                </Grid>\n              </Grid>}\n          </div>\n        </Fade>\n      </Modal>\n    </React.Fragment>\n  );\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Snackbar\\Snackbar.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\CitiesTownsTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\styles\\tableContainer.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\TaskDetails.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\components\\NavDrawer.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Navbar\\components\\TopBar.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\PersonalTaskTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\AllTasksTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\TaskTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\NewUserModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\Table.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\jsonMap.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\NewCityModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\Details.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Lists\\ListOfFiles.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\StatusColumn.js",["658"],"import React, { useCallback } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport SessionHelper from '../../../helpers/SessionHelper';\r\nimport IconTooltipButton from '../../../components/Buttons/IconTooltipButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport LanguageHelper from '../../../helpers/LanguageHelper';\r\nimport Request from '../../../helpers/Request';\r\nimport showSnackbar from '../../../components/Utils/showSnackbar';\r\nimport { TextSelector } from '../../../components/Fields/TextFields';\r\n\r\nexport default function StatusColumn({rowData, roles, jsonMap, statuses, setSeverity, setSnackbarMessage, setSnackbar, tableRef}) {\r\n  const user = SessionHelper.getUser();\r\n  const language = LanguageHelper.getLanguage();\r\n\r\n  const [dropdown, setDropdown] = React.useState({});\r\n  const [disabled, setDisabled] = React.useState(false);\r\n  const [save, setSave] = React.useState(false);\r\n\r\n  const init = useCallback(async () => {\r\n    setSave(false);\r\n    if(((rowData.eStatus === \"DONE\" || rowData.eStatus === \"APPROVED\") && roles.includes(\"ROLE_YAŞAM_GÜVENLİĞİ_KOMİTESİ_YÖNETİCİSİ\")) \r\n      || rowData.inspectionUser.id === user.id) {\r\n      setDropdown(statuses);\r\n    }\r\n    else if(rowData.eStatus === \"TODO\" ) {\r\n      setDropdown({\r\n        \"TODO\": \"Başlanmadı\",\r\n        \"DONE\": \"Tamamlandı\"\r\n      })\r\n    } else {\r\n      setDropdown(statuses);\r\n      setDisabled(true);\r\n    }\r\n    if(!roles.includes(\"ROLE_YAŞAM_GÜVENLİĞİ_KOMİTESİ_YÖNETİCİSİ\")) {\r\n      user.id !== rowData.user && setDisabled(true);\r\n    } else {\r\n      if(!((user.id !== rowData.user && (rowData.eStatus === \"DONE\" || rowData.eStatus === \"APPROVED\")) || (user.id === rowData.user))) {\r\n        setDisabled(true);\r\n      } \r\n    }\r\n  }, [rowData, roles, statuses, user]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const changeStatus = async () => {\r\n    const body = {\r\n      \"status\": rowData.eStatus,\r\n    };\r\n    const resp = await Request('post', '/api/unsuitInspections/' + rowData.id + '/change-status', body);\r\n    console.log(resp);\r\n    showSnackbar(resp, setSeverity, setSnackbarMessage, setSnackbar, language.etc.updated, tableRef);\r\n  }\r\n\r\n  return(\r\n    <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n      <TextSelector \r\n        required\r\n        disabled={disabled}\r\n        value={rowData.eStatus}\r\n        onChangeFunc={value => {\r\n          rowData.eStatus = value.target.value;\r\n          setSave(true);\r\n        }}\r\n        options={jsonMap(dropdown)}\r\n      />\r\n      <div style={{marginLeft: \"20px\"}}>\r\n      {save &&\r\n        <IconTooltipButton title={language.form.approveChange} onClick={changeStatus}>\r\n          <DoneIcon />\r\n        </IconTooltipButton>\r\n      }\r\n      </div>\r\n    </div>\r\n  ) \r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Details.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\landingPage\\LandingPage.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\UserModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Buttons\\Settings.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Forms\\FilledForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\UnsuitDetails.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\MainWorkAccidentTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\DepartmentTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\EPDKWorkAccidentTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\index.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\UnsuitabilityButton.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\NewTaskModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\NewTaskModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\cities-towns\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Modal\\TableEntryModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\PageStepper.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Content.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\Header.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\DeleteDialog.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\FormModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\workaccidentpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\Details.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\NewDepartmentModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\AccidentPersonnelDetails.js",["659"],"import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop, Button, CircularProgress, Fade, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport Request from '../../../helpers/Request';\nimport SessionHelper from '../../../helpers/SessionHelper';\nimport Details from './Details';\nimport { modalStyles } from '../../../assets/styles/tableContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    padding: 10,\n    fontSize: 30,\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#2D3446',\n  },\n  dividerStyle: {\n    margin: 20\n  },\n  text: {\n    fontSize: \"0.8vw\",\n    float: \"left\"\n  },\n  title: {\n    float: \"left\",\n    fontSize: \"0.8vw\",\n    fontWeight: \"bold\"\n  }\n}));\n\nconst useModalStyles = makeStyles((theme) => (modalStyles(theme)));\n\nexport default function AccidentPersonnelDetails({ rowData, tableRef, options }) {\n  const modalStyles = useModalStyles();\n  const classes = useStyles();\n  const token = SessionHelper.getUser().accessToken;\n\n  const [accidents, setAccidents] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [modal, setModal] = React.useState(false);\n\n  const getAccidents = useCallback(async (id) => {\n    let fetchedAccidents = [...accidents];\n    const resp = await Request(\"get\", \"/api/industrial-accidents/\" + id + \"/casualties\", { \"Authorization\": \"Bearer \" + token, \"Accept-Language\": \"tr-TR\" });\n    console.log(resp)\n    let arr = resp.data;\n    for(let i in arr) {\n      let bodyPartIds = [];\n      if(arr[i]?.injuredBodyParts.length > 0) {\n        for(let index in arr[i].injuredBodyParts) {\n          bodyPartIds.push(arr[i].injuredBodyParts[index].id);\n        }\n      }\n      let accident = {\n        id: arr[i].id,\n        personnel: arr[i].personnelFName + \" \" + arr[i].personnelLName,\n        personnelId: arr[i].personnelId,\n        lostLimbId: arr[i].lostLimb?.id,\n        injuredBodyPartIds: bodyPartIds,\n        fallDistanceOnFallAccidentsInMeters: arr[i].fallDistanceOnFallAccidentsInMeters,\n        incapacitationStartDate: arr[i].incapacitationStartDate,\n        incapacitationEndDate: arr[i].incapacitationEndDate,\n        accidentOutcomeId: arr[i].outcome?.id,\n        injuryTypeId: arr[i].injuryType?.id,\n        lostTime: arr[i].lostTime,\n        workStartTimeAtAccidentDay: arr[i].workStartTimeAtAccidentDay,\n        sgkNotificationDate: arr[i].sgkNotificationDate,\n        note: arr[i].note,\n        summary: arr[i].summary,\n      }\n      fetchedAccidents.push(accident);\n    }\n    return fetchedAccidents;\n  }, [token])\n\n  const init = useCallback(async () => {\n    const temp = await getAccidents(rowData.id);\n    setAccidents(temp);\n    temp.length > 0 && setLoading(false);\n    setTimeout(() => {setLoading(false)}, 2000);\n  }, [getAccidents, rowData]);\n  React.useEffect(() => {\n    init();\n  }, [init]);\n\n  const handleCloseModal = () => {\n    setModal(false);\n  }\n\n  const handleOpenModal = () => {\n    setModal(true);\n  }\n\n  const PrintAccidents = () => {\n    return (\n      accidents.map((data, index) => {\n        return (\n          <TableRow>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.id}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.personnel}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{options[1][data.lostLimbId]}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.incapacitationStartDate}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.incapacitationEndDate}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{options[2][data.accidentOutcomeId]}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{options[3][data.injuryTypeId]}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.lostTime}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.workStartTimeAtAccidentDay}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.sgkNotificationDate}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.note}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <p className={classes.text}>{data.summary}</p>\n            </TableCell>\n            <TableCell align=\"left\">\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  handleOpenModal();\n                }}\n                className={classes.submit}>\n                {\"Dosyalara Git\"}\n              </Button>\n            </TableCell>\n          </TableRow>\n        )\n      }) \n    )\n  }\n\n  return (\n    <React.Fragment>\n      {loading ?\n        <CircularProgress color=\"secondary\"/>\n        :\n        (accidents.length > 0 ?\n          <div>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kazazede No\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kazazede İsim\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kayıp Uzuv\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Yaralanma Tarihi\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"İyileşme Tarihi\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kaza Sonucu\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Yaralanma Tipi\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kayıp Saat\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Kaza Günü İşe Başlama Saati\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"SGK Bildirim Tarihi\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Açıklama\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Özet\"}</p>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <p className={classes.title}>{\"Dosyalar\"}</p>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <PrintAccidents />\n                </TableBody>\n              </Table>\n            </TableContainer>            \n          </div>\n          : <label>Kazazede Yok</label>)}\n      <Modal\n        className={modalStyles.modal}\n        open={modal}\n        onClose={handleCloseModal}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={modal}>\n          <div className={modalStyles.paper} style={{ backgroundColor: '#2D3446' }}>\n            <Details rowData={rowData} tableRef={tableRef}/>\n          </div>\n        </Fade>\n      </Modal>\n    </React.Fragment>\n  );\n}\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\NewAccidentModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\Forms.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\RejectionModal.js",["660"],"import React from 'react';\r\nimport LanguageHelper from '../../../helpers/LanguageHelper';\r\nimport { Backdrop, Button, Fade, FormControl, makeStyles, Modal, TextField } from '@material-ui/core';\r\nimport { TextArea } from '../../../components/Fields/TextFields';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: \"none\",\r\n  },\r\n  paper: {\r\n    outline: \"none\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"none\",\r\n    borderRadius: \"15px\",\r\n    padding: theme.spacing(2, 4, 3)\r\n  },\r\n  submit: {\r\n    marginTop: \"10px\"\r\n  },\r\n  formControl: {\r\n    width: 600\r\n  },\r\n  textField: {\r\n    marginBottom: \"20px\"\r\n  },\r\n}));\r\n\r\nexport default function RejectionModal({open, handleCloseModal, rejection, setRejection, rejectReport, data}) {\r\n  const classes = useStyles();\r\n  const language = LanguageHelper.getLanguage();\r\n\r\n  const [descriptionError, setDescriptionError] = React.useState(null);\r\n\r\n  return(\r\n    <Modal\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}>\r\n      <Fade in={open}>\r\n        <div className={classes.paper}>\r\n          <FormControl noValidate autoComplete=\"off\" className={classes.formControl}>\r\n            <TextArea\r\n              required\r\n              error={descriptionError}\r\n              label={\"Ret Açıklaması\"}\r\n              value={rejection}\r\n              shrink={rejection}\r\n              style={classes.textField}\r\n              onChangeFunc={value => {\r\n                if(value.target.value.length > 300) {\r\n                  setDescriptionError(\"Açıklama 300 karakterden uzun olamaz.\");\r\n                } else {\r\n                  descriptionError && setDescriptionError(null);\r\n                  setRejection(value.target.value);\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => rejectReport(data.id)}\r\n              className={classes.submit}>\r\n              {language.form.submit}\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitdetailspage\\components\\UnsuitData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\languages.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\ModalForm.js",["661"],"import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LanguageHelper from \"../../../../helpers/LanguageHelper\";\r\nimport { Button, FormControl, TextField } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport { modalFormStyles } from '../../../../assets/styles/tableContainer';\r\nimport { getCompaniesAndDepartments } from './GetOptions';\r\nimport jsonMap from \"../../../../components/Utils/jsonMap\";\r\nimport { DatePicker } from \"../../../../components/Selectors/DatePickers\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextSelector } from \"../../../../components/Fields/TextFields\";\r\n\r\nconst useStyles = makeStyles((theme) => (modalFormStyles(theme)));\r\n\r\nexport default function NewTaskModal({oldTaskProps, options, setOptions, newTaskProps, setNewTaskProps, updateTask, submitNewTask}) {\r\n  const language = LanguageHelper.getLanguage();\r\n  const classes = useStyles();\r\n  let collator = new Intl.Collator(\"tr\");\r\n\r\n  const [company, setCompany] = React.useState(null);\r\n  const [companies, setCompanies] = React.useState({});\r\n  const [departments, setDepartments] = React.useState([]);\r\n  const [fields, setFields] = React.useState({});\r\n\r\n  const init = useCallback(async () => {\r\n    const compsAndDepts = options.compsAndDepts;\r\n    let companies = {};\r\n    for(let comp in compsAndDepts) {\r\n      companies[comp] = comp;\r\n    }\r\n    setCompanies(companies);\r\n  }, [options, newTaskProps.userID]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const setDepartmentOptions = (company) => {\r\n    const compsAndDepts = options.compsAndDepts;\r\n\r\n    let tempArray = [];\r\n    for(let comp in compsAndDepts) {\r\n      if(comp === company) {\r\n        const depts = compsAndDepts[comp];\r\n        for(let i = 0; i < depts.length; i++) {\r\n          let temp = {};\r\n          if(depts[i].id) {\r\n            const fields = {};\r\n            temp[\"name\"] = depts[i].name;\r\n            temp[\"id\"] = depts[i].id;\r\n            for(let j = 0; j < depts[i].fieldOfActivities.length; j++) {\r\n              fields[depts[i].fieldOfActivities[j].id] = depts[i].fieldOfActivities[j].name\r\n            }\r\n            temp[\"fields\"] = fields;\r\n            tempArray.push(temp);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setDepartments(tempArray);\r\n  }\r\n\r\n  const getUserFromId = (id) => {\r\n    for(let i = 0; i < options.users.length; i++) {\r\n      if(options.users[i].id === id) {\r\n        return options.users[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const getDepartmentFromId = (id) => {\r\n    for(let i = 0; i < departments.length; i++) {\r\n      if(departments[i].id === id) {\r\n        return departments[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <FormControl noValidate autoComplete=\"off\" className={classes.formControl}>\r\n      <Autocomplete //PERSONNEL\r\n        id=\"combo-box\"\r\n        options={options.users.sort(function(a, b) {\r\n          return collator.compare(a.name, b.name)\r\n        })}\r\n        getOptionLabel={(option) => option.name}\r\n        fullWidth={true}\r\n        value={newTaskProps.userID ? getUserFromId(newTaskProps.userID) : null}\r\n        onChange={async (event, value) => {\r\n          let newOpts = options;\r\n          newOpts.compsAndDepts = await getCompaniesAndDepartments(value?.id);\r\n          setOptions(newOpts);\r\n          setNewTaskProps({...newTaskProps, userID: value?.id, departmentID: null})\r\n          setCompany(null);\r\n        }} \r\n        renderInput={(params) => <TextField {...params} required label=\"Personel\" className={classes.textField}/>}\r\n      />\r\n      {!oldTaskProps && \r\n      <TextSelector //INSPECTION TYPES\r\n        required\r\n        label={\"Denetleme Tipi\"}\r\n        value={newTaskProps.eInspectionType}\r\n        onChangeFunc={value => setNewTaskProps({...newTaskProps, eInspectionType: value.target.value})}\r\n        options={jsonMap(\"inspectionTypes\", options)}\r\n        style={classes.textField}\r\n      />}   \r\n      <DatePicker //TERMINATION DATE\r\n        style={classes.textField}\r\n        label=\"Son Tarih\" \r\n        value={moment(newTaskProps.deadline).add(\"hours\", -3)} \r\n        shrink={newTaskProps.deadline} \r\n        onChangeFunc={value => setNewTaskProps({...newTaskProps, deadline: moment(value).set(\"hour\", 23).set(\"minute\", 59).utc().add(\"hours\", 3).toISOString()})}\r\n      />\r\n      <TextSelector //COMPANY\r\n        required\r\n        label={\"Şirket\"}\r\n        disabled={!newTaskProps.userID}\r\n        value={company}\r\n        onChangeFunc={value => {\r\n          setCompany(value.target.value);\r\n          setDepartmentOptions(value.target.value);\r\n        }}        \r\n        options={jsonMap(false, companies)}\r\n        style={classes.textField}\r\n      />\r\n      <Autocomplete //DEPARTMENT\r\n        id=\"combo-box\"\r\n        options={departments.sort(function(a, b) {\r\n          return collator.compare(a.name, b.name)\r\n        })}\r\n        getOptionLabel={(option) => option.name}\r\n        disabled={!company}\r\n        fullWidth={true}\r\n        value={newTaskProps.departmentID ? getDepartmentFromId(newTaskProps.departmentID) : null}\r\n        onChange={async (event, value) => {\r\n          setNewTaskProps({...newTaskProps, departmentID: value?.id});\r\n          setFields(value?.fields);\r\n        }} \r\n        renderInput={(params) => <TextField {...params} required label=\"Bölüm\" className={classes.textField}/>}\r\n      />  \r\n      <TextSelector //FIELD OF ACTIVITY\r\n        required\r\n        label={\"Faaliyet Alanı\"}\r\n        disabled={!newTaskProps.departmentID}\r\n        value={newTaskProps.cityTownId}\r\n        onChangeFunc={value => setNewTaskProps({...newTaskProps, cityTownId: value.target.value})}\r\n        options={jsonMap(false, fields)}\r\n        style={classes.textField}\r\n      />\r\n      {newTaskProps.eStatus && \r\n      <TextSelector //STATUS\r\n        required\r\n        label={\"Durumu\"}\r\n        value={newTaskProps.eStatus}\r\n        onChangeFunc={value => setNewTaskProps({...newTaskProps, eStatus: value.target.value})}\r\n        options={jsonMap(\"taskStatuses\", options)}\r\n        style={classes.textField}\r\n      />}\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => oldTaskProps ? updateTask() : submitNewTask()}\r\n        className={classes.submit}>\r\n        {language.form.submit}\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\RoleList.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\TextInput.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\SelectionGroup.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Selectors\\PageSelector.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Details.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Group.js",["662"],"import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Backdrop, Divider, Fade, Grid, Modal } from \"@material-ui/core\";\r\nimport { modalStyles } from '../../../assets/styles/tableContainer';\r\nimport IconTooltipButton from \"../../../components/Buttons/IconTooltipButton\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport AccidentPersonnelForm from \"./AccidentPersonnelForm\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Request from \"../../../helpers/Request\";\r\n\r\nconst useOtherStyles = makeStyles({\r\n  addButton: {\r\n    marginLeft: \"40%\"\r\n  },\r\n  accidentsContainer: {\r\n    minHeight: \"2vw\",\r\n    border: \"1px solid #C7C7C7\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  groupContainer: {\r\n    marginBottom: \"20px\"\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => (modalStyles(theme)));\r\n\r\n/**\r\n * The form control component used in the accident creation/editing modal.\r\n * @param {oldAccidentProps: obj, newAccidentProps: obj, setNewAccidentProps: func, options: obj[], updateAccident: func, submitNewAccident: func} props of the form control \r\n */\r\nexport default function Group({ options, oldAccidentProps, accidents, setAccidents }) {\r\n  const classes = useStyles();\r\n  const otherStyles = useOtherStyles();\r\n\r\n  const [oldPersonnelPropsShell, setOldPersonnelPropsShell] = React.useState(null);\r\n  const [modal, setModal] = React.useState(false);\r\n  const [index, setIndex] = React.useState(null);\r\n\r\n  const getAccidents = useCallback(async (id) => {\r\n    let fetchedAccidents = [...accidents];\r\n    const resp = await Request(\"get\", \"/api/industrial-accidents/\" + id + \"/casualties\");\r\n    let arr = resp.data;\r\n    for(let i in arr) {\r\n      let bodyPartIds = [];\r\n      if(arr[i]?.injuredBodyParts.length > 0) {\r\n        for(let index in arr[i].injuredBodyParts) {\r\n          bodyPartIds.push(arr[i].injuredBodyParts[index].id);\r\n        }\r\n      }\r\n      let accident = {\r\n        id: arr[i].id,\r\n        personnelId: arr[i].personnelId,\r\n        lostLimbId: arr[i].lostLimb?.id,\r\n        injuredBodyPartIds: bodyPartIds,\r\n        fallDistanceOnFallAccidentsInMeters: arr[i].fallDistanceOnFallAccidentsInMeters,\r\n        incapacitationStartDate: arr[i].incapacitationStartDate,\r\n        incapacitationEndDate: arr[i].incapacitationEndDate,\r\n        accidentOutcomeId: arr[i].outcome?.id,\r\n        injuryTypeId: arr[i].injuryType?.id,\r\n        lostTime: arr[i].lostTime,\r\n        sgkNotificationDate: arr[i].sgkNotificationDate,\r\n        note: arr[i].note,\r\n        summary: arr[i].summary,\r\n        workStartTimeAtAccidentDay: arr[i].workStartTimeAtAccidentDay\r\n      }\r\n      fetchedAccidents.push(accident);\r\n    }\r\n    return fetchedAccidents;\r\n  }, [])\r\n\r\n  const init = useCallback(async () => {\r\n    oldAccidentProps && setAccidents(await getAccidents(oldAccidentProps.id));\r\n  }, [oldAccidentProps, setAccidents, getAccidents]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const handleOpenModal = async (data, index) => {\r\n    setOldPersonnelPropsShell(data);\r\n    setIndex(index);\r\n    setModal(true);\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setModal(false);\r\n  }\r\n\r\n  const getPersonnelFromId = (id) => {\r\n    for (let i = 0; i < options[13].length; i++) {\r\n      if (options[13][i].id === id) {\r\n        return options[13][i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const PrintAccidents = () => {\r\n    return (\r\n      accidents.map((data, index) => {\r\n        return (\r\n          <div>\r\n          {index > 0 && <Divider />}\r\n          <Grid container direction=\"row\" style={{margin: 10}}>\r\n            <Grid xs={10}>\r\n              <p>{getPersonnelFromId(data.personnelId).name}</p>\r\n            </Grid>\r\n            <Grid xs={2}>\r\n              <IconTooltipButton title={\"Kazazedeyi Sil\"} onClick={() => {\r\n                let temp = [...accidents];\r\n                temp.splice(index, 1); \r\n                setAccidents(temp);\r\n              }}>\r\n                <DeleteIcon />\r\n              </IconTooltipButton>\r\n              <IconTooltipButton title={\"Kazazedeyi Güncelle\"} onClick={() => {\r\n                handleOpenModal(data, index)\r\n              }}>\r\n                <EditIcon />\r\n              </IconTooltipButton>\r\n            </Grid>\r\n          </Grid>\r\n          </div>\r\n        )\r\n      }) \r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"row\" className={otherStyles.groupContainer}>\r\n        <Grid item xs={11} className={otherStyles.accidentsContainer}>\r\n          <PrintAccidents/>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div className={otherStyles.addButton}>\r\n            <IconTooltipButton title={\"Kazazede Ekle\"} onClick={() => handleOpenModal(null)}>\r\n              <AddBoxIcon />\r\n            </IconTooltipButton>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Modal\r\n        className={classes.modal}\r\n        open={modal}\r\n        onClose={handleCloseModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={modal}>\r\n          <div className={classes.paper}>\r\n            <AccidentPersonnelForm\r\n              oldPersonnelProps={oldPersonnelPropsShell}\r\n              options={options}\r\n              accidents={accidents}\r\n              setAccidents={setAccidents}\r\n              handleCloseModal={handleCloseModal}\r\n              getPersonnelFromId={getPersonnelFromId}\r\n              index={index}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\WorkAccidentForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Dialog\\SlideDialog.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\formtemplatepage\\components\\PrintOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\FieldsList.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\FormFilesSection.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\AccidentPersonnelForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\Dropzone.js",["663","664","665","666","667"],"import React, { useCallback, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDropzone } from 'react-dropzone';\nimport LanguageHelper from '../../../helpers/LanguageHelper';\nimport { Grid } from '@material-ui/core';\nimport IconTooltipButton from '../../../components/Buttons/IconTooltipButton';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst useStyles = makeStyles((theme) => ({\n  dropzoneLabel: {\n    fontSize: \"18px\",\n    color: \"white\"\n  },\n  dropzoneTip: {\n    fontSize: \"16px\"\n  },\n  fileLabel: {\n    fontSize: \"14px\"\n  },\n  fileDeleteIcon: {\n    marginLeft: \"auto\",\n    marginRight: 0\n  }\n}));\n\n/**\n * A custom dropzone component made to be used in multiples.\n * @param {index: number, texts: arr[], formDatas: obj[], formFiles: obj, changeMade: number, setTexts: func,\n * setFormFiles: func, setChangeMade: func, formFilesToDelete: number[], setFormFilesToDelete: func, \n * setUploadedFormCount: func, uploadedFormCount: number} params props of the custom dropzone component \n */\nexport default function Dropzone({ index, texts, formDatas, formFiles, changeMade, setTexts, active,\n  setFormFiles, setChangeMade, formFilesToDelete, setFormFilesToDelete, setUploadedFormCount, uploadedFormCount }) {\n\n  const classes = useStyles();\n  const language = LanguageHelper.getLanguage();\n  const [fileExists, setFileExists] = React.useState(texts[index][2] ? true : false);\n  const [uploaded, setUploaded] = React.useState(false);\n\n  /**\n   * Prepares the string to be rendered to show the file name and size.\n   */\n  const init = useCallback(async () => {\n    if(formDatas.length > 0) {\n      if (formDatas[index][1] !== undefined) {\n        let txts = texts;\n        txts[index][2] = formDatas[index][1] + (formDatas[index][3] ? \" - \" + formDatas[index][3] + \" bytes\" : \"\");\n        setTexts(txts);\n        setFileExists(true);\n      }\n    }\n  }, [formDatas, index, setTexts, texts]);\n  React.useEffect(() => {\n    init();\n  }, [init]);\n\n  /**\n   * Keeps the uploaded file(s) in a FormData object to upload when the button is clicked.\n   * Prepares the string to be rendered to show the file name and size.\n   * @param {obj} acceptedFiles \n   */\n  const onDrop = useCallback(acceptedFiles => {\n    let txts = texts;\n    let form = formFiles;\n    txts[index][2] = acceptedFiles[0].path + \" - \" + acceptedFiles[0].size + \" bytes\";\n    form.append(\"files\" + (index + 1), acceptedFiles[0], acceptedFiles[0].name);\n    setTexts(txts);\n    setFormFiles(form);\n    setFileExists(true);\n    setUploaded(true);\n    setUploadedFormCount(uploadedFormCount + 1);\n    setChangeMade(changeMade + 1);\n  }, [texts, changeMade, formFiles, index, setChangeMade, setFormFiles, setTexts, setUploadedFormCount, uploadedFormCount])\n\n  /**\n   * Opens the url of the file in another window. If the browser is capable of showing the file,\n   * it is shown in browser. If not, the file is downloaded.\n   * @param {obj} e used to stop propagation\n   */\n  const downloadFile = async (e) => {\n    e.stopPropagation();\n    let name = \"file\";\n    let url = \"\";\n    var element = document.createElement('a');\n    if (uploaded) {\n      for (var pair of formFiles.entries()) {\n        if (pair[0] === (\"files\" + (index + 1))) {\n          name = pair[1].name;\n          url = window.URL.createObjectURL(pair[1]);\n        }\n      }\n      element.setAttribute('href', url);\n      element.setAttribute('download', name);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    } else {\n      name = formDatas[index][1];\n      url = `https://field-inspection.s3-eu-west-1.amazonaws.com/${name}`;\n      window.open(url);\n    }\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * If the file to be removed is a file that is uploaded by the user but not sent to the server yet,\n   * the file is deleted from the texts array and the formFiles FormData object. If the file to be removed\n   * is a file fetched from the server, the id of the file is added to the filesToDelete array which gets\n   * deleted from the servers after the save changes button is clicked.\n   * @param {obj} e used to stop propagation\n   */\n  const removeFile = useCallback((e) => {\n    e.stopPropagation();\n    if (uploaded) {\n      let txts = texts;\n      let files = formFiles;\n      files.delete(\"files\" + (index + 1));\n      txts[index][2] = null;\n      setFormFiles(files);\n      setTexts(txts);\n      setUploaded(false);\n      setUploadedFormCount(uploadedFormCount - 1);\n      setChangeMade(changeMade - 1);\n    } else {\n      let filesToDelete = formFilesToDelete;\n      filesToDelete.push(formDatas[index][2]);\n      setFormFilesToDelete(filesToDelete);\n      setChangeMade(changeMade + 1);\n    }\n    setFileExists(false);\n  }, [\n    changeMade, \n    setFormFiles, \n    setTexts, \n    setUploaded, \n    setUploadedFormCount, \n    setChangeMade, \n    formFiles, \n    formDatas, \n    setFormFilesToDelete, \n    formFilesToDelete,\n    index,\n    texts,\n    uploaded,\n    uploadedFormCount\n  ])\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, isFileDialogActive } = useDropzone({ maxFiles: 1, onDrop: onDrop, disabled: !active })\n\n  const baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: 'gray',\n    borderStyle: 'dashed',\n    margin: \"10px\",\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    cursor: active ? \"pointer\" : \"default\"\n  };\n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\n  const focusedStyle = {\n    borderStyle: 'solid',\n    borderColor: 'white'\n  }\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {}),\n    ...(isFileDialogActive ? focusedStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept,\n    isFileDialogActive,\n    activeStyle,\n    acceptStyle,\n    rejectStyle,\n    focusedStyle,\n    baseStyle\n  ]);\n\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        <p className={classes.dropzoneLabel}>{texts[index][1]}</p>\n        {!fileExists && <p className={classes.dropzoneTip}>{active ? language.tableDetails.dropzone : language.tableDetails.disabled}</p>}\n        {fileExists &&\n          <Grid container direction=\"row\">\n            <IconTooltipButton title={language.tableDetails.downloadFile} onClick={(e) => downloadFile(e)}>\n              <AttachFileIcon />\n            </IconTooltipButton>\n            <p className={classes.fileLabel}>{texts[index][2]}</p>\n            {active && <div className={classes.fileDeleteIcon}>\n              <IconTooltipButton title={language.tableDetails.deleteFile} onClick={(e) => removeFile(e)}>\n                <ClearIcon />\n              </IconTooltipButton>\n            </div>}\n          </Grid>}\n      </div>\n    </div>\n  )\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\InjuredPartsList.js",["668","669"],"import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LanguageHelper from \"../../../helpers/LanguageHelper\";\r\nimport { List, ListItem, ListItemText, TextField } from \"@material-ui/core\";\r\nimport IconTooltipButton from \"../../../components/Buttons/IconTooltipButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport jsonMap from \"../../../components/Utils/jsonMap\";\r\nimport { TextSelector } from \"../../../components/Fields/TextFields\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    maxHeight: 180,\r\n    overflow: \"auto\",\r\n    border: \"1px solid gray\",\r\n    marginBottom: 25,\r\n    marginTop: -5\r\n  },\r\n  injuredBodyParts: {\r\n    marginTop: -5,\r\n    color: \"#B8B8B8\"\r\n  },\r\n  textField: {\r\n    marginTop: \"-30px\",\r\n    marginBottom: \"40px\",\r\n    marginLeft: \"25%\",\r\n    marginRight: \"auto\",\r\n    width: \"50%\"\r\n  },\r\n}));\r\n\r\nexport default function InjuredPartsList({personnelProps, setPersonnelProps, options}) {\r\n  const classes = useStyles();\r\n  const language = LanguageHelper.getLanguage();\r\n\r\n  const [update, setUpdate] = React.useState(false);\r\n\r\n  const init = useCallback(async () => {\r\n    if(!personnelProps.injuredBodyPartIds) {\r\n      personnelProps.injuredBodyPartIds = [];\r\n      setUpdate(!update);\r\n    }\r\n  }, [personnelProps]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  return (\r\n    <div>\r\n      {personnelProps.injuredBodyPartIds && \r\n      <div>\r\n        <h5 className={classes.injuredBodyParts}>Yaralı Vücut Parçaları</h5>\r\n        <List className={classes.list}>\r\n          {\r\n            personnelProps.injuredBodyPartIds.map((data, index) => (\r\n              <ListItem key={index}>\r\n                <IconTooltipButton title={language.form.deleteQuestion} onClick={() => {\r\n                  let injuredBodyPartIds = personnelProps.injuredBodyPartIds;\r\n                  injuredBodyPartIds.splice(index, 1);\r\n                  setPersonnelProps({...personnelProps, injuredBodyPartIds: injuredBodyPartIds});\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconTooltipButton>\r\n                <ListItemText secondary={options.lostLimb[`${data}`]}/>\r\n              </ListItem>\r\n            ))\r\n          }\r\n        </List>\r\n        <TextSelector\r\n          shrink={false}\r\n          label={\"Yaralı Vücut Parçası Ekle\"}\r\n          value={null}\r\n          onChangeFunc={value => {\r\n            let injuredBodyPartIds = personnelProps.injuredBodyPartIds;\r\n            injuredBodyPartIds.push(parseInt(value.target.value));\r\n            setPersonnelProps({...personnelProps, injuredBodyPartIds: injuredBodyPartIds});\r\n          }}\r\n          style={classes.textField}\r\n          options={jsonMap(\"lostLimb\", options)}\r\n        />\r\n      </div>}\r\n    </div>\r\n  );\r\n}","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\mainWorkAccidentPage\\components\\OtherFiles.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\departments\\components\\BelongingDepartmentList.js",["670"],"import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LanguageHelper from \"../../../helpers/LanguageHelper\";\r\nimport { List, ListItem, ListItemText, MenuItem, TextField } from \"@material-ui/core\";\r\nimport IconTooltipButton from \"../../../components/Buttons/IconTooltipButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { getDepartments } from \"./GetOptions\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextSelector } from \"../../../components/Fields/TextFields\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    maxHeight: 180,\r\n    overflow: \"auto\",\r\n    border: \"1px solid gray\",\r\n    marginBottom: 25,\r\n    marginTop: -5\r\n  },\r\n  belongingDepartments: {\r\n    marginTop: -5,\r\n    color: \"#B8B8B8\"\r\n  },\r\n  textField: {\r\n    marginTop: \"-15px\",\r\n    marginBottom: \"40px\",\r\n    marginLeft: \"25%\",\r\n    marginRight: \"auto\",\r\n    width: \"50%\"\r\n  },\r\n}));\r\n\r\nexport default function BelongingDepartmentList({oldDepartmentProps, newDepartmentProps, setNewDepartmentProps, options, collator, getCompanyFromId}) {\r\n  const classes = useStyles();\r\n  const language = LanguageHelper.getLanguage();\r\n\r\n  const [newDepartment, setNewDepartment] = React.useState(\"\");\r\n  const [update, setUpdate] = React.useState(false);\r\n  const [deptDropdown, setDeptDropdown] = React.useState({});\r\n  const [belongingDepartmentsLookup, setBelongingDeparmentsLookup] = React.useState({});\r\n  const [companyForDeptDropdown, setCompanyForDeptDropdown] = React.useState(null);\r\n  \r\n  const init = useCallback(async () => {\r\n    if(oldDepartmentProps) { \r\n      const temp = belongingDepartmentsLookup;\r\n      const depts = [...oldDepartmentProps.belongingDepartments];\r\n      for(let index in depts) {\r\n        const department = depts[index];\r\n        temp[department.id] = department.name;\r\n      }\r\n      setBelongingDeparmentsLookup(temp);\r\n    }\r\n    setUpdate(!update);\r\n  }, [setBelongingDeparmentsLookup, belongingDepartmentsLookup, oldDepartmentProps]);\r\n  React.useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const jsonMap = (obj) => {\r\n    return (\r\n      obj && Object.keys(obj).map((data) => (\r\n        <MenuItem key={data} value={data}>\r\n          {obj[data]}\r\n        </MenuItem>\r\n      ))\r\n    )\r\n  }\r\n\r\n  const RenderList = useCallback(() => {\r\n    return(\r\n      <List className={classes.list}>\r\n        {\r\n          newDepartmentProps.parentDepartmentIds.map((data, index) => {\r\n          return(\r\n            <ListItem key={index}>\r\n              \r\n              {newDepartmentProps.parentDepartmentIds.length > 1 &&\r\n              <IconTooltipButton title={language.form.delete} onClick={() => {\r\n                let belongingDepartments = [...newDepartmentProps.parentDepartmentIds];\r\n                belongingDepartments.splice(index, 1);\r\n                setNewDepartmentProps({...newDepartmentProps, parentDepartmentIds: belongingDepartments});\r\n              }}>\r\n                <DeleteIcon />\r\n              </IconTooltipButton>}\r\n\r\n              <ListItemText secondary={belongingDepartmentsLookup[data]}/>\r\n            \r\n            </ListItem>\r\n          )})\r\n        }\r\n      </List>\r\n    )\r\n  }, [belongingDepartmentsLookup, newDepartmentProps, classes, language, setNewDepartmentProps])\r\n\r\n  return (\r\n    <div>\r\n      <h5 className={classes.belongingDepartments}>Bağlı Olduğu Bölümler *</h5>\r\n      <RenderList/>\r\n      <Autocomplete //COMPANY\r\n        id=\"combo-box\"\r\n        options={options.companies.sort(function(a, b) {\r\n          return collator.compare(a.name, b.name)\r\n        })}\r\n        getOptionLabel={(option) => option.name}\r\n        fullWidth={true}\r\n        value={companyForDeptDropdown ? getCompanyFromId(companyForDeptDropdown) : null}\r\n        onChange={async (event, value) => {\r\n          const temp = belongingDepartmentsLookup;\r\n          const depts = await getDepartments(value?.id);\r\n          setCompanyForDeptDropdown(value?.id);\r\n          setDeptDropdown(depts);\r\n          for(let deptId in depts) {\r\n            temp[deptId] = depts[`${deptId}`];\r\n          }\r\n          setBelongingDeparmentsLookup(temp);\r\n        }} \r\n        renderInput={(params) => <TextField {...params} required label=\"Şirket\" className={classes.textField}/>}\r\n      />\r\n      <TextSelector \r\n        label={\"Bağlayacak Bölüm Seç\"}\r\n        value={newDepartment}\r\n        onChangeFunc={value => {\r\n          let belongingDepartments = [...newDepartmentProps.parentDepartmentIds];\r\n          belongingDepartments.push(parseInt(value.target.value));\r\n          setNewDepartmentProps({...newDepartmentProps, parentDepartmentIds: belongingDepartments});\r\n          setNewDepartment(\"\");\r\n        }}\r\n        style={classes.textField}\r\n        options={jsonMap(deptDropdown)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\PrintDetails.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\PrintUnsuitability.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\TaskData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskdetailspage\\components\\Forms.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\CompanyTable.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\Details.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\NewCompanyModal.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\FetchData.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\ModalForm.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\SGKList.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Table\\TableFilters.js",["671"],"import React, { useCallback } from 'react';\r\nimport { makeStyles, Grid, Paper, Collapse, Button } from '@material-ui/core';\r\nimport IconTooltipButton from '../Buttons/IconTooltipButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    flexDirection: 'column',\r\n  },\r\n  applyButton: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nexport default function TableFilters({getFilterFields, filterFieldProps, tableRef, filtersOpen, setFiltersOpen, setFilters}) {\r\n  const classes = useStyles();\r\n\r\n  const [collapse, setCollapse] = React.useState(filtersOpen);\r\n  const [tableFilters, setTableFilters] = React.useState({});\r\n  \r\n  return (\r\n    <div>\r\n      <IconTooltipButton title=\"Filtreleri Göster\" onClick={() => { setCollapse(!collapse); setTimeout(() => {setFiltersOpen(!collapse)}, 500) }}>\r\n        <FilterList fontSize=\"large\"/>\r\n      </IconTooltipButton>\r\n    \r\n      <Collapse in={collapse}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            {getFilterFields(filterFieldProps, setTableFilters)}\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.applyButton} onClick={() => {\r\n                setFilters(tableFilters);\r\n                tableRef.current && tableRef.current.onQueryChange();\r\n              }}>\r\n                Filtreleri Uygula\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\users\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\yasamusers\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\assets\\constants.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\unsuitpage\\components\\UnsuitFilters.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\alltaskpage\\components\\AllTasksFilters.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\taskpage\\components\\TasksFilters.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\auditTasks\\personaltaskpage\\components\\PersonalTasksFilters.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\showSnackbar.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\pages\\companies\\components\\GetOptions.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Fields\\TextFields.js",[],"C:\\Users\\aoklu\\Desktop\\Dev Build\\src\\components\\Utils\\Export.js",[],{"ruleId":"672","replacedBy":"673"},{"ruleId":"674","replacedBy":"675"},{"ruleId":"676","severity":1,"message":"677","line":56,"column":10,"nodeType":"678","messageId":"679","endLine":56,"endColumn":23},{"ruleId":"680","severity":1,"message":"681","line":74,"column":6,"nodeType":"682","endLine":74,"endColumn":8,"suggestions":"683"},{"ruleId":"680","severity":1,"message":"684","line":99,"column":6,"nodeType":"682","endLine":99,"endColumn":38,"suggestions":"685"},{"ruleId":"676","severity":1,"message":"677","line":79,"column":10,"nodeType":"678","messageId":"679","endLine":79,"endColumn":23},{"ruleId":"676","severity":1,"message":"686","line":11,"column":8,"nodeType":"678","messageId":"679","endLine":11,"endColumn":21},{"ruleId":"676","severity":1,"message":"687","line":12,"column":8,"nodeType":"678","messageId":"679","endLine":12,"endColumn":27},{"ruleId":"676","severity":1,"message":"688","line":3,"column":66,"nodeType":"678","messageId":"679","endLine":3,"endColumn":75},{"ruleId":"676","severity":1,"message":"689","line":8,"column":10,"nodeType":"678","messageId":"679","endLine":8,"endColumn":18},{"ruleId":"680","severity":1,"message":"690","line":56,"column":6,"nodeType":"682","endLine":56,"endColumn":28,"suggestions":"691"},{"ruleId":"680","severity":1,"message":"692","line":85,"column":6,"nodeType":"682","endLine":85,"endColumn":23,"suggestions":"693"},{"ruleId":"676","severity":1,"message":"694","line":91,"column":10,"nodeType":"678","messageId":"679","endLine":91,"endColumn":22},{"ruleId":"676","severity":1,"message":"688","line":2,"column":10,"nodeType":"678","messageId":"679","endLine":2,"endColumn":19},{"ruleId":"680","severity":1,"message":"695","line":74,"column":6,"nodeType":"682","endLine":74,"endColumn":13,"suggestions":"696"},{"ruleId":"676","severity":1,"message":"688","line":3,"column":66,"nodeType":"678","messageId":"679","endLine":3,"endColumn":75},{"ruleId":"680","severity":1,"message":"697","line":32,"column":6,"nodeType":"682","endLine":32,"endColumn":36,"suggestions":"698"},{"ruleId":"680","severity":1,"message":"695","line":70,"column":6,"nodeType":"682","endLine":70,"endColumn":8,"suggestions":"699"},{"ruleId":"680","severity":1,"message":"700","line":152,"column":9,"nodeType":"701","endLine":167,"endColumn":4},{"ruleId":"680","severity":1,"message":"702","line":168,"column":9,"nodeType":"701","endLine":170,"endColumn":4},{"ruleId":"680","severity":1,"message":"703","line":171,"column":9,"nodeType":"701","endLine":173,"endColumn":4},{"ruleId":"680","severity":1,"message":"704","line":174,"column":9,"nodeType":"701","endLine":176,"endColumn":4},{"ruleId":"680","severity":1,"message":"705","line":177,"column":9,"nodeType":"701","endLine":180,"endColumn":4},{"ruleId":"676","severity":1,"message":"688","line":4,"column":40,"nodeType":"678","messageId":"679","endLine":4,"endColumn":49},{"ruleId":"680","severity":1,"message":"706","line":42,"column":6,"nodeType":"682","endLine":42,"endColumn":22,"suggestions":"707"},{"ruleId":"680","severity":1,"message":"706","line":53,"column":6,"nodeType":"682","endLine":53,"endColumn":84,"suggestions":"708"},{"ruleId":"676","severity":1,"message":"709","line":1,"column":17,"nodeType":"678","messageId":"679","endLine":1,"endColumn":28},"no-native-reassign",["710"],"no-negated-in-lhs",["711"],"no-unused-vars","'languageState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'getContractors'. Either include it or remove the dependency array.","ArrayExpression",["712"],"React Hook useCallback has a missing dependency: 'getDepartments'. Either include it or remove the dependency array.",["713"],"'SessionHelper' is defined but never used.","'AuthorizationHelper' is defined but never used.","'TextField' is defined but never used.","'TextArea' is defined but never used.","React Hook useCallback has a missing dependency: 'getLabelHeight'. Either include it or remove the dependency array.",["714"],"React Hook useCallback has a missing dependency: 'tableRef'. Either include it or remove the dependency array.",["715"],"'modalLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'accidents'. Either include it or remove the dependency array.",["716"],"React Hook useCallback has an unnecessary dependency: 'newTaskProps.userID'. Either exclude it or remove the dependency array.",["717"],["718"],"The 'baseStyle' object makes the dependencies of useMemo Hook (at line 187) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'baseStyle' in its own useMemo() Hook.","VariableDeclarator","The 'activeStyle' object makes the dependencies of useMemo Hook (at line 187) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'activeStyle' in its own useMemo() Hook.","The 'acceptStyle' object makes the dependencies of useMemo Hook (at line 187) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'acceptStyle' in its own useMemo() Hook.","The 'rejectStyle' object makes the dependencies of useMemo Hook (at line 187) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'rejectStyle' in its own useMemo() Hook.","The 'focusedStyle' object makes the dependencies of useMemo Hook (at line 187) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'focusedStyle' in its own useMemo() Hook.","React Hook useCallback has a missing dependency: 'update'. Either include it or remove the dependency array. You can also do a functional update 'setUpdate(u => ...)' if you only need 'update' in the 'setUpdate' call.",["719"],["720"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},"Update the dependencies array to be: [getContractors]",{"range":"739","text":"740"},"Update the dependencies array to be: [getDepartments, startDate, endDate, department]",{"range":"741","text":"742"},"Update the dependencies array to be: [dataSet, getLabelHeight]",{"range":"743","text":"744"},"Update the dependencies array to be: [language.tableColumns.completionDate, language.tableColumns.id, language.tableColumns.name, language.tableColumns.state, language.tableColumns.terminationDate, roles, tableRef]",{"range":"745","text":"746"},"Update the dependencies array to be: [accidents, token]",{"range":"747","text":"748"},"Update the dependencies array to be: [options]",{"range":"749","text":"750"},"Update the dependencies array to be: [accidents]",{"range":"751","text":"752"},"Update the dependencies array to be: [personnelProps, update]",{"range":"753","text":"754"},"Update the dependencies array to be: [oldDepartmentProps, update, belongingDepartmentsLookup]",{"range":"755","text":"756"},[2655,2657],"[getContractors]",[3549,3581],"[getDepartments, startDate, endDate, department]",[1666,1688],"[dataSet, getLabelHeight]",[4045,4062],"[language.tableColumns.completionDate, language.tableColumns.id, language.tableColumns.name, language.tableColumns.state, language.tableColumns.terminationDate, roles, tableRef]",[2650,2657],"[accidents, token]",[1452,1482],"[options]",[2786,2788],"[accidents]",[1309,1325],"[personnelProps, update]",[1957,2035],"[oldDepartmentProps, update, belongingDepartmentsLookup]"]